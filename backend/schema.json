openapi: 3.0.3
info:
  title: OASYS Platform API
  version: 1.0.0
  description: API documentation for OASYS Platform
paths:
  /api/v1/accounting/accounts/:
    get:
      operationId: v1_accounting_accounts_list
      description: List and create Chart of Accounts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChartOfAccountsList'
          description: ''
    post:
      operationId: v1_accounting_accounts_create
      description: List and create Chart of Accounts
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartOfAccountsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChartOfAccountsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChartOfAccountsRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartOfAccounts'
          description: ''
  /api/v1/accounting/accounts/{account_id}/activity/:
    get:
      operationId: v1_accounting_accounts_activity_retrieve
      description: Get account activity
      parameters:
      - in: path
        name: account_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounting/accounts/{id}/:
    get:
      operationId: v1_accounting_accounts_retrieve
      description: Retrieve, update, and delete Chart of Accounts
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartOfAccounts'
          description: ''
    put:
      operationId: v1_accounting_accounts_update
      description: Retrieve, update, and delete Chart of Accounts
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartOfAccountsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChartOfAccountsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChartOfAccountsRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartOfAccounts'
          description: ''
    patch:
      operationId: v1_accounting_accounts_partial_update
      description: Retrieve, update, and delete Chart of Accounts
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChartOfAccountsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChartOfAccountsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChartOfAccountsRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartOfAccounts'
          description: ''
    delete:
      operationId: v1_accounting_accounts_destroy
      description: Retrieve, update, and delete Chart of Accounts
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounting/accounts/search/:
    get:
      operationId: v1_accounting_accounts_search_retrieve
      description: Search Chart of Accounts
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounting/journal-entries/:
    get:
      operationId: v1_accounting_journal_entries_list
      description: List and create Journal Entries
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJournalEntryList'
          description: ''
    post:
      operationId: v1_accounting_journal_entries_create
      description: List and create Journal Entries
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JournalEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JournalEntryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
          description: ''
  /api/v1/accounting/journal-entries/{journal_entry_id}/lines/:
    get:
      operationId: v1_accounting_journal_entries_lines_list
      description: List and create Journal Entry Lines
      parameters:
      - in: path
        name: journal_entry_id
        schema:
          type: string
          format: uuid
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJournalEntryLineList'
          description: ''
    post:
      operationId: v1_accounting_journal_entries_lines_create
      description: List and create Journal Entry Lines
      parameters:
      - in: path
        name: journal_entry_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JournalEntryLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JournalEntryLineRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryLine'
          description: ''
  /api/v1/accounting/journal-entries/{id}/:
    get:
      operationId: v1_accounting_journal_entries_retrieve
      description: Retrieve, update, and delete Journal Entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryWithLines'
          description: ''
    put:
      operationId: v1_accounting_journal_entries_update
      description: Retrieve, update, and delete Journal Entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JournalEntryWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JournalEntryWithLinesRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryWithLines'
          description: ''
    patch:
      operationId: v1_accounting_journal_entries_partial_update
      description: Retrieve, update, and delete Journal Entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJournalEntryWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJournalEntryWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJournalEntryWithLinesRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryWithLines'
          description: ''
    delete:
      operationId: v1_accounting_journal_entries_destroy
      description: Retrieve, update, and delete Journal Entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounting/journal-entries/{id}/post/:
    post:
      operationId: v1_accounting_journal_entries_post_create
      description: Post a journal entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounting/reports/balance-sheet/:
    get:
      operationId: v1_accounting_reports_balance_sheet_retrieve
      description: Get balance sheet
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounting/reports/income-statement/:
    get:
      operationId: v1_accounting_reports_income_statement_retrieve
      description: Get income statement
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounting/reports/trial-balance/:
    get:
      operationId: v1_accounting_reports_trial_balance_retrieve
      description: Get trial balance
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/categorization/:
    get:
      operationId: v1_ai_categorization_list
      description: List and create AI categorizations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAICategorizationList'
          description: ''
    post:
      operationId: v1_ai_categorization_create
      description: List and create AI categorizations
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICategorizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICategorizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICategorizationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICategorization'
          description: ''
  /api/v1/ai/categorization/{id}/:
    get:
      operationId: v1_ai_categorization_retrieve
      description: Retrieve, update, and delete AI categorization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICategorization'
          description: ''
    put:
      operationId: v1_ai_categorization_update
      description: Retrieve, update, and delete AI categorization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICategorizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICategorizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICategorizationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICategorization'
          description: ''
    patch:
      operationId: v1_ai_categorization_partial_update
      description: Retrieve, update, and delete AI categorization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAICategorizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAICategorizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAICategorizationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICategorization'
          description: ''
    delete:
      operationId: v1_ai_categorization_destroy
      description: Retrieve, update, and delete AI categorization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/ai/documents/:
    get:
      operationId: v1_ai_documents_list
      description: List and create documents
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: v1_ai_documents_create
      description: List and create documents
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/ai/documents/{document_id}/categorization/:
    get:
      operationId: v1_ai_documents_categorization_retrieve
      description: Get AI categorization for a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/documents/{document_id}/extraction/:
    get:
      operationId: v1_ai_documents_extraction_retrieve
      description: Get AI extraction results for a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/documents/{id}/:
    get:
      operationId: v1_ai_documents_retrieve
      description: Retrieve, update, and delete document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: v1_ai_documents_update
      description: Retrieve, update, and delete document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: v1_ai_documents_partial_update
      description: Retrieve, update, and delete document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: v1_ai_documents_destroy
      description: Retrieve, update, and delete document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/ai/documents/process/:
    post:
      operationId: v1_ai_documents_process_create
      description: Process an existing document
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/documents/search/:
    get:
      operationId: v1_ai_documents_search_retrieve
      description: Search documents using AI
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/documents/upload/:
    post:
      operationId: v1_ai_documents_upload_create
      description: Upload and process a document
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/extraction/:
    get:
      operationId: v1_ai_extraction_list
      description: List and create AI extraction results
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAIExtractionResultList'
          description: ''
    post:
      operationId: v1_ai_extraction_create
      description: List and create AI extraction results
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIExtractionResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIExtractionResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIExtractionResultRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIExtractionResult'
          description: ''
  /api/v1/ai/extraction/{id}/:
    get:
      operationId: v1_ai_extraction_retrieve
      description: Retrieve, update, and delete AI extraction result
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIExtractionResult'
          description: ''
    put:
      operationId: v1_ai_extraction_update
      description: Retrieve, update, and delete AI extraction result
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIExtractionResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIExtractionResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIExtractionResultRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIExtractionResult'
          description: ''
    patch:
      operationId: v1_ai_extraction_partial_update
      description: Retrieve, update, and delete AI extraction result
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAIExtractionResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAIExtractionResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAIExtractionResultRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIExtractionResult'
          description: ''
    delete:
      operationId: v1_ai_extraction_destroy
      description: Retrieve, update, and delete AI extraction result
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/ai/jobs/:
    get:
      operationId: v1_ai_jobs_list
      description: List and create AI processing jobs
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAIProcessingJobList'
          description: ''
    post:
      operationId: v1_ai_jobs_create
      description: List and create AI processing jobs
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIProcessingJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIProcessingJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIProcessingJobRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProcessingJob'
          description: ''
  /api/v1/ai/jobs/{id}/:
    get:
      operationId: v1_ai_jobs_retrieve
      description: Retrieve, update, and delete AI processing job
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProcessingJob'
          description: ''
    put:
      operationId: v1_ai_jobs_update
      description: Retrieve, update, and delete AI processing job
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIProcessingJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIProcessingJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIProcessingJobRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProcessingJob'
          description: ''
    patch:
      operationId: v1_ai_jobs_partial_update
      description: Retrieve, update, and delete AI processing job
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAIProcessingJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAIProcessingJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAIProcessingJobRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProcessingJob'
          description: ''
    delete:
      operationId: v1_ai_jobs_destroy
      description: Retrieve, update, and delete AI processing job
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/ai/models/:
    get:
      operationId: v1_ai_models_list
      description: List and create AI models
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAIModelList'
          description: ''
    post:
      operationId: v1_ai_models_create
      description: List and create AI models
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIModelRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
  /api/v1/ai/models/{model_id}/retrain/:
    post:
      operationId: v1_ai_models_retrain_create
      description: Retrain an AI model
      parameters:
      - in: path
        name: model_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/ai/models/{id}/:
    get:
      operationId: v1_ai_models_retrieve
      description: Retrieve, update, and delete AI model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
    put:
      operationId: v1_ai_models_update
      description: Retrieve, update, and delete AI model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIModelRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
    patch:
      operationId: v1_ai_models_partial_update
      description: Retrieve, update, and delete AI model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAIModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAIModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAIModelRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: ''
    delete:
      operationId: v1_ai_models_destroy
      description: Retrieve, update, and delete AI model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/ai/stats/:
    get:
      operationId: v1_ai_stats_retrieve
      description: Get AI processing statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/current-user/:
    get:
      operationId: v1_auth_current_user_retrieve
      description: Get current user information
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/invitations/:
    post:
      operationId: v1_auth_invitations_create
      description: Tenant invitation view
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTenantInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTenantInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTenantInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTenantInvitation'
          description: ''
  /api/v1/auth/invitations/accept/:
    post:
      operationId: v1_auth_invitations_accept_create
      description: Accept tenant invitation view
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/login/:
    post:
      operationId: v1_auth_login_create
      description: Authenticate user and return navigation data
      summary: User Login
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Login successful with navigation data
        '400':
          description: Invalid credentials
  /api/v1/auth/logout/:
    post:
      operationId: v1_auth_logout_create
      description: User logout view
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/navigation/:
    get:
      operationId: v1_auth_navigation_retrieve
      description: Get navigation menu based on user type and role
      summary: Get Navigation Data
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Navigation data retrieved successfully
        '401':
          description: Authentication required
  /api/v1/auth/password/change/:
    post:
      operationId: v1_auth_password_change_create
      description: Password change view
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/password/reset/:
    post:
      operationId: v1_auth_password_reset_create
      description: Password reset request view
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: v1_auth_password_reset_confirm_create
      description: Password reset confirmation view
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/profile/:
    get:
      operationId: v1_auth_profile_retrieve
      description: User profile view
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: v1_auth_profile_update
      description: User profile view
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: v1_auth_profile_partial_update
      description: User profile view
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/v1/auth/register/:
    post:
      operationId: v1_auth_register_create
      description: User registration view
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/token/:
    post:
      operationId: v1_auth_token_create
      description: Custom token obtain view using our custom serializer
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: v1_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/users/:
    get:
      operationId: v1_auth_users_list
      description: List users for tenant admin
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: v1_auth_users_retrieve
      description: User detail view for tenant admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_auth_users_update
      description: User detail view for tenant admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_auth_users_partial_update
      description: User detail view for tenant admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_auth_users_destroy
      description: User detail view for tenant admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/banking/accounts/:
    get:
      operationId: v1_banking_accounts_list
      description: List and create bank accounts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankAccountList'
          description: ''
    post:
      operationId: v1_banking_accounts_create
      description: List and create bank accounts
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
  /api/v1/banking/accounts/{account_id}/reconciliation/:
    get:
      operationId: v1_banking_accounts_reconciliation_retrieve
      description: Get bank reconciliation data
      parameters:
      - in: path
        name: account_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/banking/accounts/{account_id}/transactions/:
    get:
      operationId: v1_banking_accounts_transactions_retrieve
      description: Get transactions for a specific bank account
      parameters:
      - in: path
        name: account_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/banking/accounts/{id}/:
    get:
      operationId: v1_banking_accounts_retrieve
      description: Retrieve, update, and delete bank account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
    put:
      operationId: v1_banking_accounts_update
      description: Retrieve, update, and delete bank account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
    patch:
      operationId: v1_banking_accounts_partial_update
      description: Retrieve, update, and delete bank account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: ''
    delete:
      operationId: v1_banking_accounts_destroy
      description: Retrieve, update, and delete bank account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/banking/accounts/summary/:
    get:
      operationId: v1_banking_accounts_summary_retrieve
      description: Get summary of all bank accounts
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/banking/integrations/:
    get:
      operationId: v1_banking_integrations_list
      description: List and create bank integrations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankIntegrationList'
          description: ''
    post:
      operationId: v1_banking_integrations_create
      description: List and create bank integrations
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankIntegrationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankIntegration'
          description: ''
  /api/v1/banking/integrations/{integration_id}/sync/:
    post:
      operationId: v1_banking_integrations_sync_create
      description: Sync bank data from integration
      parameters:
      - in: path
        name: integration_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/banking/integrations/{id}/:
    get:
      operationId: v1_banking_integrations_retrieve
      description: Retrieve, update, and delete bank integration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankIntegration'
          description: ''
    put:
      operationId: v1_banking_integrations_update
      description: Retrieve, update, and delete bank integration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankIntegrationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankIntegration'
          description: ''
    patch:
      operationId: v1_banking_integrations_partial_update
      description: Retrieve, update, and delete bank integration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBankIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBankIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBankIntegrationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankIntegration'
          description: ''
    delete:
      operationId: v1_banking_integrations_destroy
      description: Retrieve, update, and delete bank integration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/banking/statements/:
    get:
      operationId: v1_banking_statements_list
      description: List and create bank statements
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankStatementList'
          description: ''
    post:
      operationId: v1_banking_statements_create
      description: List and create bank statements
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatement'
          description: ''
  /api/v1/banking/statements/{id}/:
    get:
      operationId: v1_banking_statements_retrieve
      description: Retrieve, update, and delete bank statement
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatement'
          description: ''
    put:
      operationId: v1_banking_statements_update
      description: Retrieve, update, and delete bank statement
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankStatementRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatement'
          description: ''
    patch:
      operationId: v1_banking_statements_partial_update
      description: Retrieve, update, and delete bank statement
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBankStatementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBankStatementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBankStatementRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatement'
          description: ''
    delete:
      operationId: v1_banking_statements_destroy
      description: Retrieve, update, and delete bank statement
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/banking/stats/:
    get:
      operationId: v1_banking_stats_retrieve
      description: Get banking statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/banking/transactions/:
    get:
      operationId: v1_banking_transactions_list
      description: List and create bank transactions
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankTransactionList'
          description: ''
    post:
      operationId: v1_banking_transactions_create
      description: List and create bank transactions
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankTransactionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransaction'
          description: ''
  /api/v1/banking/transactions/{id}/:
    get:
      operationId: v1_banking_transactions_retrieve
      description: Retrieve, update, and delete bank transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransaction'
          description: ''
    put:
      operationId: v1_banking_transactions_update
      description: Retrieve, update, and delete bank transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankTransactionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransaction'
          description: ''
    patch:
      operationId: v1_banking_transactions_partial_update
      description: Retrieve, update, and delete bank transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBankTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBankTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBankTransactionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransaction'
          description: ''
    delete:
      operationId: v1_banking_transactions_destroy
      description: Retrieve, update, and delete bank transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/banking/transactions/{transaction_id}/reconcile/:
    post:
      operationId: v1_banking_transactions_reconcile_create
      description: Reconcile a bank transaction
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/banking/transactions/search/:
    get:
      operationId: v1_banking_transactions_search_retrieve
      description: Search bank transactions
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/customers/{customer_id}/invoices/:
    get:
      operationId: v1_invoicing_customers_invoices_retrieve
      description: Get invoices for a specific customer
      parameters:
      - in: path
        name: customer_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/invoices/:
    get:
      operationId: v1_invoicing_invoices_list
      description: List and create invoices
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
    post:
      operationId: v1_invoicing_invoices_create
      description: List and create invoices
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/invoicing/invoices/{invoice_id}/lines/:
    get:
      operationId: v1_invoicing_invoices_lines_list
      description: List and create invoice lines
      parameters:
      - in: path
        name: invoice_id
        schema:
          type: string
          format: uuid
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceLineList'
          description: ''
    post:
      operationId: v1_invoicing_invoices_lines_create
      description: List and create invoice lines
      parameters:
      - in: path
        name: invoice_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceLineRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceLine'
          description: ''
  /api/v1/invoicing/invoices/{invoice_id}/payments/:
    post:
      operationId: v1_invoicing_invoices_payments_create
      description: Record a payment for an invoice
      parameters:
      - in: path
        name: invoice_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/invoices/{id}/:
    get:
      operationId: v1_invoicing_invoices_retrieve
      description: Retrieve, update, and delete invoice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceWithLines'
          description: ''
    put:
      operationId: v1_invoicing_invoices_update
      description: Retrieve, update, and delete invoice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceWithLinesRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceWithLines'
          description: ''
    patch:
      operationId: v1_invoicing_invoices_partial_update
      description: Retrieve, update, and delete invoice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceWithLinesRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceWithLines'
          description: ''
    delete:
      operationId: v1_invoicing_invoices_destroy
      description: Retrieve, update, and delete invoice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/invoicing/invoices/{id}/approve/:
    post:
      operationId: v1_invoicing_invoices_approve_create
      description: Approve an invoice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/invoices/{id}/send/:
    post:
      operationId: v1_invoicing_invoices_send_create
      description: Send an invoice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/invoices/overdue/:
    get:
      operationId: v1_invoicing_invoices_overdue_retrieve
      description: Get overdue invoices
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/invoices/search/:
    get:
      operationId: v1_invoicing_invoices_search_retrieve
      description: Search invoices
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/invoices/stats/:
    get:
      operationId: v1_invoicing_invoices_stats_retrieve
      description: Get invoice statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/invoicing/payments/:
    get:
      operationId: v1_invoicing_payments_list
      description: List and create invoice payments
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoicePaymentList'
          description: ''
    post:
      operationId: v1_invoicing_payments_create
      description: List and create invoice payments
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePayment'
          description: ''
  /api/v1/invoicing/payments/{id}/:
    get:
      operationId: v1_invoicing_payments_retrieve
      description: Retrieve, update, and delete invoice payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePayment'
          description: ''
    put:
      operationId: v1_invoicing_payments_update
      description: Retrieve, update, and delete invoice payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePayment'
          description: ''
    patch:
      operationId: v1_invoicing_payments_partial_update
      description: Retrieve, update, and delete invoice payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoicePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoicePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoicePaymentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePayment'
          description: ''
    delete:
      operationId: v1_invoicing_payments_destroy
      description: Retrieve, update, and delete invoice payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/invoicing/templates/:
    get:
      operationId: v1_invoicing_templates_list
      description: List and create invoice templates
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceTemplateList'
          description: ''
    post:
      operationId: v1_invoicing_templates_create
      description: List and create invoice templates
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
  /api/v1/invoicing/templates/{id}/:
    get:
      operationId: v1_invoicing_templates_retrieve
      description: Retrieve, update, and delete invoice template
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    put:
      operationId: v1_invoicing_templates_update
      description: Retrieve, update, and delete invoice template
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    patch:
      operationId: v1_invoicing_templates_partial_update
      description: Retrieve, update, and delete invoice template
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    delete:
      operationId: v1_invoicing_templates_destroy
      description: Retrieve, update, and delete invoice template
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchase/orders/:
    get:
      operationId: v1_purchase_orders_list
      description: List and create purchase orders
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseOrderList'
          description: ''
    post:
      operationId: v1_purchase_orders_create
      description: List and create purchase orders
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: ''
  /api/v1/purchase/orders/{id}/:
    get:
      operationId: v1_purchase_orders_retrieve
      description: Retrieve, update, and delete purchase order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderWithLines'
          description: ''
    put:
      operationId: v1_purchase_orders_update
      description: Retrieve, update, and delete purchase order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderWithLinesRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderWithLines'
          description: ''
    patch:
      operationId: v1_purchase_orders_partial_update
      description: Retrieve, update, and delete purchase order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseOrderWithLinesRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderWithLines'
          description: ''
    delete:
      operationId: v1_purchase_orders_destroy
      description: Retrieve, update, and delete purchase order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchase/orders/{id}/approve/:
    post:
      operationId: v1_purchase_orders_approve_create
      description: Approve a purchase order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/orders/{id}/receive/:
    post:
      operationId: v1_purchase_orders_receive_create
      description: Receive a purchase order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/orders/{purchase_order_id}/lines/:
    get:
      operationId: v1_purchase_orders_lines_list
      description: List and create purchase order lines
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: purchase_order_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseOrderLineList'
          description: ''
    post:
      operationId: v1_purchase_orders_lines_create
      description: List and create purchase order lines
      parameters:
      - in: path
        name: purchase_order_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderLineRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderLine'
          description: ''
  /api/v1/purchase/orders/{purchase_order_id}/receipt/:
    post:
      operationId: v1_purchase_orders_receipt_create
      description: Create a purchase receipt from a purchase order
      parameters:
      - in: path
        name: purchase_order_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/payments/:
    get:
      operationId: v1_purchase_payments_list
      description: List and create purchase payments
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchasePaymentList'
          description: ''
    post:
      operationId: v1_purchase_payments_create
      description: List and create purchase payments
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchasePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchasePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchasePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasePayment'
          description: ''
  /api/v1/purchase/payments/{id}/:
    get:
      operationId: v1_purchase_payments_retrieve
      description: Retrieve, update, and delete purchase payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasePayment'
          description: ''
    put:
      operationId: v1_purchase_payments_update
      description: Retrieve, update, and delete purchase payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchasePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchasePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchasePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasePayment'
          description: ''
    patch:
      operationId: v1_purchase_payments_partial_update
      description: Retrieve, update, and delete purchase payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchasePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchasePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchasePaymentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasePayment'
          description: ''
    delete:
      operationId: v1_purchase_payments_destroy
      description: Retrieve, update, and delete purchase payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchase/receipts/:
    get:
      operationId: v1_purchase_receipts_list
      description: List and create purchase receipts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseReceiptList'
          description: ''
    post:
      operationId: v1_purchase_receipts_create
      description: List and create purchase receipts
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReceipt'
          description: ''
  /api/v1/purchase/receipts/{id}/:
    get:
      operationId: v1_purchase_receipts_retrieve
      description: Retrieve, update, and delete purchase receipt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReceiptWithLines'
          description: ''
    put:
      operationId: v1_purchase_receipts_update
      description: Retrieve, update, and delete purchase receipt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptWithLinesRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReceiptWithLines'
          description: ''
    patch:
      operationId: v1_purchase_receipts_partial_update
      description: Retrieve, update, and delete purchase receipt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseReceiptWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseReceiptWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseReceiptWithLinesRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReceiptWithLines'
          description: ''
    delete:
      operationId: v1_purchase_receipts_destroy
      description: Retrieve, update, and delete purchase receipt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchase/receipts/{id}/approve/:
    post:
      operationId: v1_purchase_receipts_approve_create
      description: Approve a purchase receipt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/receipts/{purchase_receipt_id}/lines/:
    get:
      operationId: v1_purchase_receipts_lines_list
      description: List and create purchase receipt lines
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: purchase_receipt_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseReceiptLineList'
          description: ''
    post:
      operationId: v1_purchase_receipts_lines_create
      description: List and create purchase receipt lines
      parameters:
      - in: path
        name: purchase_receipt_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseReceiptLineRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReceiptLine'
          description: ''
  /api/v1/purchase/stats/:
    get:
      operationId: v1_purchase_stats_retrieve
      description: Get purchase statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/suppliers/:
    get:
      operationId: v1_purchase_suppliers_list
      description: List and create suppliers
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierList'
          description: ''
    post:
      operationId: v1_purchase_suppliers_create
      description: List and create suppliers
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/v1/purchase/suppliers/{id}/:
    get:
      operationId: v1_purchase_suppliers_retrieve
      description: Retrieve, update, and delete supplier
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: v1_purchase_suppliers_update
      description: Retrieve, update, and delete supplier
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: v1_purchase_suppliers_partial_update
      description: Retrieve, update, and delete supplier
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplierRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: v1_purchase_suppliers_destroy
      description: Retrieve, update, and delete supplier
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchase/suppliers/{supplier_id}/orders/:
    get:
      operationId: v1_purchase_suppliers_orders_retrieve
      description: Get orders for a specific supplier
      parameters:
      - in: path
        name: supplier_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/suppliers/{supplier_id}/payments/:
    post:
      operationId: v1_purchase_suppliers_payments_create
      description: Record a payment for a supplier
      parameters:
      - in: path
        name: supplier_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/suppliers/search/:
    get:
      operationId: v1_purchase_suppliers_search_retrieve
      description: Search suppliers
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/purchase/suppliers/summary/:
    get:
      operationId: v1_purchase_suppliers_summary_retrieve
      description: Get summary of all suppliers
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/customers/:
    get:
      operationId: v1_sales_customers_list
      description: List and create customers
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: v1_sales_customers_create
      description: List and create customers
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/v1/sales/customers/{customer_id}/orders/:
    get:
      operationId: v1_sales_customers_orders_retrieve
      description: Get orders for a specific customer
      parameters:
      - in: path
        name: customer_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/customers/{id}/:
    get:
      operationId: v1_sales_customers_retrieve
      description: Retrieve, update, and delete customer
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: v1_sales_customers_update
      description: Retrieve, update, and delete customer
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: v1_sales_customers_partial_update
      description: Retrieve, update, and delete customer
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: v1_sales_customers_destroy
      description: Retrieve, update, and delete customer
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/sales/customers/search/:
    get:
      operationId: v1_sales_customers_search_retrieve
      description: Search customers
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/customers/summary/:
    get:
      operationId: v1_sales_customers_summary_retrieve
      description: Get summary of all customers
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/orders/:
    get:
      operationId: v1_sales_orders_list
      description: List and create sales orders
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalesOrderList'
          description: ''
    post:
      operationId: v1_sales_orders_create
      description: List and create sales orders
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesOrderRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: ''
  /api/v1/sales/orders/{id}/:
    get:
      operationId: v1_sales_orders_retrieve
      description: Retrieve, update, and delete sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderWithLines'
          description: ''
    put:
      operationId: v1_sales_orders_update
      description: Retrieve, update, and delete sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesOrderWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesOrderWithLinesRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderWithLines'
          description: ''
    patch:
      operationId: v1_sales_orders_partial_update
      description: Retrieve, update, and delete sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSalesOrderWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSalesOrderWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSalesOrderWithLinesRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderWithLines'
          description: ''
    delete:
      operationId: v1_sales_orders_destroy
      description: Retrieve, update, and delete sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/sales/orders/{id}/approve/:
    post:
      operationId: v1_sales_orders_approve_create
      description: Approve a sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/orders/{id}/ship/:
    post:
      operationId: v1_sales_orders_ship_create
      description: Ship a sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/orders/{sales_order_id}/lines/:
    get:
      operationId: v1_sales_orders_lines_list
      description: List and create sales order lines
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: sales_order_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalesOrderLineList'
          description: ''
    post:
      operationId: v1_sales_orders_lines_create
      description: List and create sales order lines
      parameters:
      - in: path
        name: sales_order_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesOrderLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesOrderLineRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLine'
          description: ''
  /api/v1/sales/quotes/:
    get:
      operationId: v1_sales_quotes_list
      description: List and create sales quotes
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalesQuoteList'
          description: ''
    post:
      operationId: v1_sales_quotes_create
      description: List and create sales quotes
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesQuoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesQuoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesQuoteRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesQuote'
          description: ''
  /api/v1/sales/quotes/{id}/:
    get:
      operationId: v1_sales_quotes_retrieve
      description: Retrieve, update, and delete sales quote
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesQuoteWithLines'
          description: ''
    put:
      operationId: v1_sales_quotes_update
      description: Retrieve, update, and delete sales quote
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesQuoteWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesQuoteWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesQuoteWithLinesRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesQuoteWithLines'
          description: ''
    patch:
      operationId: v1_sales_quotes_partial_update
      description: Retrieve, update, and delete sales quote
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSalesQuoteWithLinesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSalesQuoteWithLinesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSalesQuoteWithLinesRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesQuoteWithLines'
          description: ''
    delete:
      operationId: v1_sales_quotes_destroy
      description: Retrieve, update, and delete sales quote
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/sales/quotes/{id}/approve/:
    post:
      operationId: v1_sales_quotes_approve_create
      description: Approve a sales quote
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/quotes/{id}/convert/:
    post:
      operationId: v1_sales_quotes_convert_create
      description: Convert a sales quote to a sales order
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/sales/quotes/{sales_quote_id}/lines/:
    get:
      operationId: v1_sales_quotes_lines_list
      description: List and create sales quote lines
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: sales_quote_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalesQuoteLineList'
          description: ''
    post:
      operationId: v1_sales_quotes_lines_create
      description: List and create sales quote lines
      parameters:
      - in: path
        name: sales_quote_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesQuoteLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesQuoteLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesQuoteLineRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesQuoteLine'
          description: ''
  /api/v1/sales/stats/:
    get:
      operationId: v1_sales_stats_retrieve
      description: Get sales statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/tenants/:
    get:
      operationId: v1_tenants_list
      description: List and create tenants (for platform admin)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTenantList'
          description: ''
    post:
      operationId: v1_tenants_create
      description: List and create tenants (for platform admin)
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenantRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
  /api/v1/tenants/{id}/:
    get:
      operationId: v1_tenants_retrieve
      description: Retrieve, update, and delete tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
    put:
      operationId: v1_tenants_update
      description: Retrieve, update, and delete tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenantRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
    patch:
      operationId: v1_tenants_partial_update
      description: Retrieve, update, and delete tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
    delete:
      operationId: v1_tenants_destroy
      description: Retrieve, update, and delete tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tenants/{tenant_id}/deactivate/:
    post:
      operationId: v1_tenants_deactivate_create
      description: Deactivate tenant
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/tenants/{tenant_id}/upgrade/:
    post:
      operationId: v1_tenants_upgrade_create
      description: Upgrade tenant plan
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/tenants/companies/:
    get:
      operationId: v1_tenants_companies_list
      description: List and create companies for a tenant
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
          description: ''
    post:
      operationId: v1_tenants_companies_create
      description: List and create companies for a tenant
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/v1/tenants/companies/{id}/:
    get:
      operationId: v1_tenants_companies_retrieve
      description: Retrieve, update, and delete company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: v1_tenants_companies_update
      description: Retrieve, update, and delete company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: v1_tenants_companies_partial_update
      description: Retrieve, update, and delete company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: v1_tenants_companies_destroy
      description: Retrieve, update, and delete company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tenants/companies/search/:
    get:
      operationId: v1_tenants_companies_search_retrieve
      description: Search companies within tenant
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/tenants/dashboard/:
    get:
      operationId: v1_tenants_dashboard_retrieve
      description: Get tenant dashboard data
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/tenants/invitations/:
    get:
      operationId: v1_tenants_invitations_list
      description: List and create tenant invitations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTenantInvitationList'
          description: ''
    post:
      operationId: v1_tenants_invitations_create
      description: List and create tenant invitations
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TenantInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenantInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInvitation'
          description: ''
  /api/v1/tenants/invitations/{id}/:
    get:
      operationId: v1_tenants_invitations_retrieve
      description: Retrieve and delete tenant invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInvitation'
          description: ''
    delete:
      operationId: v1_tenants_invitations_destroy
      description: Retrieve and delete tenant invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tenants/stats/:
    get:
      operationId: v1_tenants_stats_retrieve
      description: Get tenant statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantStats'
          description: ''
  /api/v1/web3/contracts/:
    get:
      operationId: v1_web3_contracts_list
      description: List and create smart contracts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSmartContractList'
          description: ''
    post:
      operationId: v1_web3_contracts_create
      description: List and create smart contracts
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
          description: ''
  /api/v1/web3/contracts/{id}/:
    get:
      operationId: v1_web3_contracts_retrieve
      description: Retrieve, update, and delete smart contract
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
          description: ''
    put:
      operationId: v1_web3_contracts_update
      description: Retrieve, update, and delete smart contract
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmartContractRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
          description: ''
    patch:
      operationId: v1_web3_contracts_partial_update
      description: Retrieve, update, and delete smart contract
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmartContractRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmartContractRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmartContractRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
          description: ''
    delete:
      operationId: v1_web3_contracts_destroy
      description: Retrieve, update, and delete smart contract
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/contracts/deploy/:
    post:
      operationId: v1_web3_contracts_deploy_create
      description: Deploy a smart contract
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/positions/:
    get:
      operationId: v1_web3_positions_list
      description: List and create DeFi positions
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeFiPositionList'
          description: ''
    post:
      operationId: v1_web3_positions_create
      description: List and create DeFi positions
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeFiPositionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeFiPositionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeFiPositionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiPosition'
          description: ''
  /api/v1/web3/positions/{id}/:
    get:
      operationId: v1_web3_positions_retrieve
      description: Retrieve, update, and delete DeFi position
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiPosition'
          description: ''
    put:
      operationId: v1_web3_positions_update
      description: Retrieve, update, and delete DeFi position
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeFiPositionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeFiPositionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeFiPositionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiPosition'
          description: ''
    patch:
      operationId: v1_web3_positions_partial_update
      description: Retrieve, update, and delete DeFi position
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeFiPositionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeFiPositionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeFiPositionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiPosition'
          description: ''
    delete:
      operationId: v1_web3_positions_destroy
      description: Retrieve, update, and delete DeFi position
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/positions/{position_id}/close/:
    post:
      operationId: v1_web3_positions_close_create
      description: Close a DeFi position
      parameters:
      - in: path
        name: position_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/positions/open/:
    post:
      operationId: v1_web3_positions_open_create
      description: Open a DeFi position
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/protocols/:
    get:
      operationId: v1_web3_protocols_list
      description: List and create DeFi protocols
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeFiProtocolList'
          description: ''
    post:
      operationId: v1_web3_protocols_create
      description: List and create DeFi protocols
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeFiProtocolRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeFiProtocolRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeFiProtocolRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiProtocol'
          description: ''
  /api/v1/web3/protocols/{id}/:
    get:
      operationId: v1_web3_protocols_retrieve
      description: Retrieve, update, and delete DeFi protocol
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiProtocol'
          description: ''
    put:
      operationId: v1_web3_protocols_update
      description: Retrieve, update, and delete DeFi protocol
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeFiProtocolRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeFiProtocolRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeFiProtocolRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiProtocol'
          description: ''
    patch:
      operationId: v1_web3_protocols_partial_update
      description: Retrieve, update, and delete DeFi protocol
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeFiProtocolRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeFiProtocolRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeFiProtocolRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeFiProtocol'
          description: ''
    delete:
      operationId: v1_web3_protocols_destroy
      description: Retrieve, update, and delete DeFi protocol
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/settings/:
    get:
      operationId: v1_web3_settings_list
      description: List and create Web3 integration settings
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWeb3IntegrationSettingsList'
          description: ''
    post:
      operationId: v1_web3_settings_create
      description: List and create Web3 integration settings
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Web3IntegrationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Web3IntegrationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Web3IntegrationSettingsRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Web3IntegrationSettings'
          description: ''
  /api/v1/web3/settings/{id}/:
    get:
      operationId: v1_web3_settings_retrieve
      description: Retrieve, update, and delete Web3 integration settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Web3IntegrationSettings'
          description: ''
    put:
      operationId: v1_web3_settings_update
      description: Retrieve, update, and delete Web3 integration settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Web3IntegrationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Web3IntegrationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Web3IntegrationSettingsRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Web3IntegrationSettings'
          description: ''
    patch:
      operationId: v1_web3_settings_partial_update
      description: Retrieve, update, and delete Web3 integration settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWeb3IntegrationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWeb3IntegrationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWeb3IntegrationSettingsRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Web3IntegrationSettings'
          description: ''
    delete:
      operationId: v1_web3_settings_destroy
      description: Retrieve, update, and delete Web3 integration settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/stats/:
    get:
      operationId: v1_web3_stats_retrieve
      description: Get Web3 statistics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/token-prices/:
    get:
      operationId: v1_web3_token_prices_list
      description: List and create token prices
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTokenPriceList'
          description: ''
    post:
      operationId: v1_web3_token_prices_create
      description: List and create token prices
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenPriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenPriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenPriceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPrice'
          description: ''
  /api/v1/web3/token-prices/{id}/:
    get:
      operationId: v1_web3_token_prices_retrieve
      description: Retrieve, update, and delete token price
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPrice'
          description: ''
    put:
      operationId: v1_web3_token_prices_update
      description: Retrieve, update, and delete token price
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenPriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenPriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenPriceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPrice'
          description: ''
    patch:
      operationId: v1_web3_token_prices_partial_update
      description: Retrieve, update, and delete token price
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTokenPriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTokenPriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTokenPriceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPrice'
          description: ''
    delete:
      operationId: v1_web3_token_prices_destroy
      description: Retrieve, update, and delete token price
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/token-prices/{token_address}/history/:
    get:
      operationId: v1_web3_token_prices_history_retrieve
      description: Get token price history
      parameters:
      - in: path
        name: token_address
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/transactions/:
    get:
      operationId: v1_web3_transactions_list
      description: List and create crypto transactions
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCryptoTransactionList'
          description: ''
    post:
      operationId: v1_web3_transactions_create
      description: List and create crypto transactions
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptoTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CryptoTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CryptoTransactionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoTransaction'
          description: ''
  /api/v1/web3/transactions/{id}/:
    get:
      operationId: v1_web3_transactions_retrieve
      description: Retrieve, update, and delete crypto transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoTransaction'
          description: ''
    put:
      operationId: v1_web3_transactions_update
      description: Retrieve, update, and delete crypto transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptoTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CryptoTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CryptoTransactionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoTransaction'
          description: ''
    patch:
      operationId: v1_web3_transactions_partial_update
      description: Retrieve, update, and delete crypto transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCryptoTransactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCryptoTransactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCryptoTransactionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoTransaction'
          description: ''
    delete:
      operationId: v1_web3_transactions_destroy
      description: Retrieve, update, and delete crypto transaction
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/transactions/search/:
    get:
      operationId: v1_web3_transactions_search_retrieve
      description: Search crypto transactions
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/wallets/:
    get:
      operationId: v1_web3_wallets_list
      description: List and create crypto wallets
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCryptoWalletList'
          description: ''
    post:
      operationId: v1_web3_wallets_create
      description: List and create crypto wallets
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptoWalletRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CryptoWalletRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CryptoWalletRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoWallet'
          description: ''
  /api/v1/web3/wallets/{id}/:
    get:
      operationId: v1_web3_wallets_retrieve
      description: Retrieve, update, and delete crypto wallet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoWallet'
          description: ''
    put:
      operationId: v1_web3_wallets_update
      description: Retrieve, update, and delete crypto wallet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptoWalletRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CryptoWalletRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CryptoWalletRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoWallet'
          description: ''
    patch:
      operationId: v1_web3_wallets_partial_update
      description: Retrieve, update, and delete crypto wallet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCryptoWalletRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCryptoWalletRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCryptoWalletRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoWallet'
          description: ''
    delete:
      operationId: v1_web3_wallets_destroy
      description: Retrieve, update, and delete crypto wallet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/web3/wallets/{wallet_id}/balance/:
    get:
      operationId: v1_web3_wallets_balance_retrieve
      description: Get wallet balance
      parameters:
      - in: path
        name: wallet_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/wallets/{wallet_id}/send/:
    post:
      operationId: v1_web3_wallets_send_create
      description: Send a crypto transaction
      parameters:
      - in: path
        name: wallet_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/wallets/{wallet_id}/transactions/:
    get:
      operationId: v1_web3_wallets_transactions_retrieve
      description: Get transactions for a specific wallet
      parameters:
      - in: path
        name: wallet_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/web3/wallets/create/:
    post:
      operationId: v1_web3_wallets_create_create
      description: Create a new crypto wallet
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AICategorization:
      type: object
      description: Serializer for AI Categorization
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
          format: uuid
        document_name:
          type: string
          readOnly: true
        category:
          type: string
          maxLength: 100
        confidence:
          type: number
          format: double
        ai_model:
          type: string
          maxLength: 100
        model_version:
          type: string
          maxLength: 50
        processing_time:
          type: number
          format: double
          nullable: true
        raw_response:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - ai_model
      - category
      - confidence
      - created_at
      - document
      - document_name
      - id
    AICategorizationRequest:
      type: object
      description: Serializer for AI Categorization
      properties:
        document:
          type: string
          format: uuid
        category:
          type: string
          minLength: 1
          maxLength: 100
        confidence:
          type: number
          format: double
        ai_model:
          type: string
          minLength: 1
          maxLength: 100
        model_version:
          type: string
          maxLength: 50
        processing_time:
          type: number
          format: double
          nullable: true
        raw_response:
          nullable: true
      required:
      - ai_model
      - category
      - confidence
      - document
    AIExtractionResult:
      type: object
      description: Serializer for AI Extraction Result
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        document:
          type: string
          format: uuid
        document_name:
          type: string
          readOnly: true
        field_name:
          type: string
          maxLength: 100
        field_value:
          type: string
        confidence:
          type: number
          format: double
        bounding_box:
          nullable: true
        ai_model:
          type: string
          maxLength: 100
        model_version:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - ai_model
      - confidence
      - created_at
      - document
      - document_name
      - field_name
      - field_value
      - id
    AIExtractionResultRequest:
      type: object
      description: Serializer for AI Extraction Result
      properties:
        document:
          type: string
          format: uuid
        field_name:
          type: string
          minLength: 1
          maxLength: 100
        field_value:
          type: string
          minLength: 1
        confidence:
          type: number
          format: double
        bounding_box:
          nullable: true
        ai_model:
          type: string
          minLength: 1
          maxLength: 100
        model_version:
          type: string
          maxLength: 50
      required:
      - ai_model
      - confidence
      - document
      - field_name
      - field_value
    AIModel:
      type: object
      description: Serializer for AI Model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        version:
          type: string
          maxLength: 50
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
        provider:
          $ref: '#/components/schemas/AIModelProviderEnum'
        model_id:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        is_default:
          type: boolean
        configuration: {}
        performance_metrics: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - model_id
      - model_type
      - name
      - provider
      - updated_at
      - version
    AIModelProviderEnum:
      enum:
      - openai
      - google
      - azure
      - aws
      - custom
      type: string
      description: |-
        * `openai` - OpenAI
        * `google` - Google
        * `azure` - Microsoft Azure
        * `aws` - Amazon AWS
        * `custom` - Custom
    AIModelRequest:
      type: object
      description: Serializer for AI Model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        version:
          type: string
          minLength: 1
          maxLength: 50
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
        provider:
          $ref: '#/components/schemas/AIModelProviderEnum'
        model_id:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
        is_default:
          type: boolean
        configuration: {}
        performance_metrics: {}
      required:
      - model_id
      - model_type
      - name
      - provider
      - version
    AIProcessingJob:
      type: object
      description: Serializer for AI Processing Job
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        job_type_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status9c6Enum'
        status_display:
          type: string
          readOnly: true
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        documents:
          type: array
          items:
            type: string
            format: uuid
        parameters: {}
        results:
          nullable: true
        error_message:
          type: string
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        processing_time_seconds:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - documents
      - id
      - job_type
      - job_type_display
      - processing_time_seconds
      - status_display
      - tenant
      - updated_at
    AIProcessingJobRequest:
      type: object
      description: Serializer for AI Processing Job
      properties:
        tenant:
          type: string
          format: uuid
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        status:
          $ref: '#/components/schemas/Status9c6Enum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        documents:
          type: array
          items:
            type: string
            format: uuid
        parameters: {}
        results:
          nullable: true
        error_message:
          type: string
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        created_by:
          type: string
          format: uuid
      required:
      - created_by
      - documents
      - job_type
      - tenant
    AccountTypeEnum:
      enum:
      - checking
      - savings
      - money_market
      - credit_card
      - line_of_credit
      type: string
      description: |-
        * `checking` - Checking
        * `savings` - Savings
        * `money_market` - Money Market
        * `credit_card` - Credit Card
        * `line_of_credit` - Line of Credit
    AuthTenantInvitation:
      type: object
      description: Serializer for tenant invitations
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role995Enum'
        invited_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        tenant_name:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - expires_at
      - id
      - invited_by
      - is_accepted
      - role
      - tenant_name
    AuthTenantInvitationRequest:
      type: object
      description: Serializer for tenant invitations
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role995Enum'
      required:
      - email
      - role
    BankAccount:
      type: object
      description: Serializer for Bank Account
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        company_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        account_number:
          type: string
          maxLength: 50
        bank_name:
          type: string
          maxLength: 255
        account_type:
          $ref: '#/components/schemas/AccountTypeEnum'
        currency:
          type: string
          maxLength: 3
        opening_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        current_balance:
          type: string
          readOnly: true
        available_balance:
          type: string
          readOnly: true
        is_active:
          type: boolean
        last_reconciliation_date:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - account_number
      - account_type
      - available_balance
      - bank_name
      - company
      - company_name
      - created_at
      - current_balance
      - id
      - name
      - tenant
      - updated_at
    BankAccountRequest:
      type: object
      description: Serializer for Bank Account
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        account_number:
          type: string
          maxLength: 50
        bank_name:
          type: string
          minLength: 1
          maxLength: 255
        account_type:
          $ref: '#/components/schemas/AccountTypeEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        opening_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        last_reconciliation_date:
          type: string
          format: date
          nullable: true
      required:
      - account_number
      - account_type
      - bank_name
      - company
      - name
      - tenant
    BankIntegration:
      type: object
      description: Serializer for Bank Integration
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bank_account:
          type: string
          format: uuid
        bank_account_name:
          type: string
          readOnly: true
        integration_type:
          $ref: '#/components/schemas/IntegrationTypeEnum'
        provider:
          $ref: '#/components/schemas/Provider9feEnum'
        api_key:
          type: string
          maxLength: 255
        api_secret:
          type: string
          maxLength: 255
        endpoint_url:
          type: string
          format: uri
          maxLength: 200
        is_active:
          type: boolean
        last_sync_date:
          type: string
          format: date-time
          nullable: true
        sync_frequency:
          $ref: '#/components/schemas/SyncFrequencyEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - bank_account
      - bank_account_name
      - created_at
      - id
      - integration_type
      - provider
      - updated_at
    BankIntegrationRequest:
      type: object
      description: Serializer for Bank Integration
      properties:
        bank_account:
          type: string
          format: uuid
        integration_type:
          $ref: '#/components/schemas/IntegrationTypeEnum'
        provider:
          $ref: '#/components/schemas/Provider9feEnum'
        api_key:
          type: string
          maxLength: 255
        api_secret:
          type: string
          maxLength: 255
        endpoint_url:
          type: string
          format: uri
          maxLength: 200
        is_active:
          type: boolean
        last_sync_date:
          type: string
          format: date-time
          nullable: true
        sync_frequency:
          $ref: '#/components/schemas/SyncFrequencyEnum'
      required:
      - bank_account
      - integration_type
      - provider
    BankStatement:
      type: object
      description: Serializer for Bank Statement
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bank_account:
          type: string
          format: uuid
        bank_account_name:
          type: string
          readOnly: true
        statement_date:
          type: string
          format: date
        opening_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        closing_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_transactions:
          type: string
          readOnly: true
        file_path:
          type: string
          maxLength: 500
        is_processed:
          type: boolean
        processed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - bank_account
      - bank_account_name
      - closing_balance
      - created_at
      - id
      - opening_balance
      - statement_date
      - total_transactions
      - updated_at
    BankStatementRequest:
      type: object
      description: Serializer for Bank Statement
      properties:
        bank_account:
          type: string
          format: uuid
        statement_date:
          type: string
          format: date
        opening_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        closing_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        file_path:
          type: string
          maxLength: 500
        is_processed:
          type: boolean
        processed_at:
          type: string
          format: date-time
          nullable: true
      required:
      - bank_account
      - closing_balance
      - opening_balance
      - statement_date
    BankTransaction:
      type: object
      description: Serializer for Bank Transaction
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bank_account:
          type: string
          format: uuid
        bank_account_name:
          type: string
          readOnly: true
        transaction_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 255
        reference:
          type: string
          maxLength: 100
        transaction_type:
          $ref: '#/components/schemas/BankTransactionTransactionTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        running_balance:
          type: string
          readOnly: true
        category:
          type: string
          maxLength: 100
        is_reconciled:
          type: boolean
        reconciliation_date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - bank_account
      - bank_account_name
      - created_at
      - description
      - id
      - running_balance
      - transaction_type
      - updated_at
    BankTransactionRequest:
      type: object
      description: Serializer for Bank Transaction
      properties:
        bank_account:
          type: string
          format: uuid
        transaction_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          minLength: 1
          maxLength: 255
        reference:
          type: string
          maxLength: 100
        transaction_type:
          $ref: '#/components/schemas/BankTransactionTransactionTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 3
        category:
          type: string
          maxLength: 100
        is_reconciled:
          type: boolean
        reconciliation_date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
      required:
      - amount
      - bank_account
      - description
      - transaction_type
    BankTransactionTransactionTypeEnum:
      enum:
      - deposit
      - withdrawal
      - transfer
      - fee
      - interest
      type: string
      description: |-
        * `deposit` - Deposit
        * `withdrawal` - Withdrawal
        * `transfer` - Transfer
        * `fee` - Fee
        * `interest` - Interest
    BlankEnum:
      enum:
      - ''
    ChartOfAccounts:
      type: object
      description: Serializer for Chart of Accounts
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        code:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        parent:
          type: string
          format: uuid
          nullable: true
        parent_name:
          type: string
          readOnly: true
        description:
          type: string
        is_active:
          type: boolean
        is_system:
          type: boolean
        normal_balance:
          $ref: '#/components/schemas/NormalBalanceEnum'
        balance:
          type: string
          readOnly: true
        children_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - balance
      - children_count
      - code
      - created_at
      - id
      - name
      - normal_balance
      - parent_name
      - tenant
      - type
      - updated_at
    ChartOfAccountsRequest:
      type: object
      description: Serializer for Chart of Accounts
      properties:
        tenant:
          type: string
          format: uuid
        code:
          type: string
          minLength: 1
          maxLength: 20
        name:
          type: string
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        parent:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
        is_active:
          type: boolean
        is_system:
          type: boolean
        normal_balance:
          $ref: '#/components/schemas/NormalBalanceEnum'
      required:
      - code
      - name
      - normal_balance
      - tenant
      - type
    Company:
      type: object
      description: Serializer for Company model
      properties:
        id:
          type: integer
          readOnly: true
        tenant:
          type: string
          format: uuid
        tenant_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        legal_name:
          type: string
          maxLength: 255
        tax_id:
          type: string
          maxLength: 100
        registration_number:
          type: string
          maxLength: 100
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        website:
          type: string
          format: uri
          maxLength: 200
        currency:
          type: string
          maxLength: 3
        timezone:
          type: string
          maxLength: 50
        fiscal_year_start:
          type: string
          format: date
          nullable: true
        logo:
          type: string
          format: uri
          nullable: true
        is_primary:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - tenant
      - tenant_name
      - updated_at
    CompanyRequest:
      type: object
      description: Serializer for Company model
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        legal_name:
          type: string
          maxLength: 255
        tax_id:
          type: string
          maxLength: 100
        registration_number:
          type: string
          maxLength: 100
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        website:
          type: string
          format: uri
          maxLength: 200
        currency:
          type: string
          minLength: 1
          maxLength: 3
        timezone:
          type: string
          minLength: 1
          maxLength: 50
        fiscal_year_start:
          type: string
          format: date
          nullable: true
        logo:
          type: string
          format: binary
          nullable: true
        is_primary:
          type: boolean
        is_active:
          type: boolean
      required:
      - name
      - tenant
    ContractTypeEnum:
      enum:
      - token
      - nft
      - defi
      - dao
      - custom
      type: string
      description: |-
        * `token` - Token Contract
        * `nft` - NFT Contract
        * `defi` - DeFi Protocol
        * `dao` - DAO Contract
        * `custom` - Custom Contract
    CryptoTransaction:
      type: object
      description: Serializer for Crypto Transaction
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        wallet:
          type: string
          format: uuid
        wallet_name:
          type: string
          readOnly: true
        tx_hash:
          type: string
          maxLength: 255
        transaction_hash_short:
          type: string
          readOnly: true
        transaction_type:
          $ref: '#/components/schemas/CryptoTransactionTransactionTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        token_symbol:
          type: string
          maxLength: 10
        token_address:
          type: string
          maxLength: 255
        token_name:
          type: string
          maxLength: 100
        gas_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,18})?$
          nullable: true
        gas_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,18})?$
          nullable: true
        gas_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/CryptoTransactionStatusEnum'
        block_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        block_hash:
          type: string
          maxLength: 255
        from_address:
          type: string
          maxLength: 255
        to_address:
          type: string
          maxLength: 255
        contract_address:
          type: string
          maxLength: 255
        function_name:
          type: string
          maxLength: 100
        function_args:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - from_address
      - id
      - to_address
      - token_symbol
      - transaction_hash_short
      - tx_hash
      - updated_at
      - wallet
      - wallet_name
    CryptoTransactionRequest:
      type: object
      description: Serializer for Crypto Transaction
      properties:
        wallet:
          type: string
          format: uuid
        tx_hash:
          type: string
          minLength: 1
          maxLength: 255
        transaction_type:
          $ref: '#/components/schemas/CryptoTransactionTransactionTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        token_symbol:
          type: string
          minLength: 1
          maxLength: 10
        token_address:
          type: string
          maxLength: 255
        token_name:
          type: string
          maxLength: 100
        gas_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,18})?$
          nullable: true
        gas_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,18})?$
          nullable: true
        gas_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/CryptoTransactionStatusEnum'
        block_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        block_hash:
          type: string
          maxLength: 255
        from_address:
          type: string
          minLength: 1
          maxLength: 255
        to_address:
          type: string
          minLength: 1
          maxLength: 255
        contract_address:
          type: string
          maxLength: 255
        function_name:
          type: string
          maxLength: 100
        function_args:
          nullable: true
      required:
      - amount
      - from_address
      - to_address
      - token_symbol
      - tx_hash
      - wallet
    CryptoTransactionStatusEnum:
      enum:
      - pending
      - confirmed
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `confirmed` - Confirmed
        * `failed` - Failed
        * `cancelled` - Cancelled
    CryptoTransactionTransactionTypeEnum:
      enum:
      - transfer
      - swap
      - stake
      - unstake
      - mint
      - burn
      - contract_interaction
      type: string
      description: |-
        * `transfer` - Transfer
        * `swap` - Swap
        * `stake` - Stake
        * `unstake` - Unstake
        * `mint` - Mint
        * `burn` - Burn
        * `contract_interaction` - Contract Interaction
    CryptoWallet:
      type: object
      description: Serializer for Crypto Wallet
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        network:
          $ref: '#/components/schemas/CryptoWalletNetworkEnum'
        wallet_type:
          $ref: '#/components/schemas/WalletTypeEnum'
        is_active:
          type: boolean
        is_primary:
          type: boolean
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        last_sync:
          type: string
          format: date-time
          nullable: true
        public_key:
          type: string
          maxLength: 255
        encrypted_private_key:
          type: string
        mnemonic_phrase:
          type: string
        balance_usd:
          type: string
          readOnly: true
        total_transactions:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - balance_usd
      - created_at
      - id
      - name
      - network
      - tenant
      - total_transactions
      - updated_at
      - user
      - wallet_type
    CryptoWalletNetworkEnum:
      enum:
      - ethereum
      - polygon
      - bsc
      - solana
      - bitcoin
      - cardano
      - polkadot
      type: string
      description: |-
        * `ethereum` - Ethereum
        * `polygon` - Polygon
        * `bsc` - Binance Smart Chain
        * `solana` - Solana
        * `bitcoin` - Bitcoin
        * `cardano` - Cardano
        * `polkadot` - Polkadot
    CryptoWalletRequest:
      type: object
      description: Serializer for Crypto Wallet
      properties:
        tenant:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        address:
          type: string
          minLength: 1
          maxLength: 255
        network:
          $ref: '#/components/schemas/CryptoWalletNetworkEnum'
        wallet_type:
          $ref: '#/components/schemas/WalletTypeEnum'
        is_active:
          type: boolean
        is_primary:
          type: boolean
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        last_sync:
          type: string
          format: date-time
          nullable: true
        public_key:
          type: string
          maxLength: 255
        encrypted_private_key:
          type: string
        mnemonic_phrase:
          type: string
      required:
      - address
      - name
      - network
      - tenant
      - user
      - wallet_type
    CustomTokenObtainPair:
      type: object
      description: Custom token serializer that includes user information
      properties:
        email:
          type: string
      required:
      - email
    CustomTokenObtainPairRequest:
      type: object
      description: Custom token serializer that includes user information
      properties:
        email:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    Customer:
      type: object
      description: Serializer for Customer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tax_id:
          type: string
          maxLength: 100
        currency:
          type: string
          maxLength: 3
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        credit_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        total_orders:
          type: string
          readOnly: true
        total_revenue:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - created_at
      - id
      - name
      - tenant
      - total_orders
      - total_revenue
      - updated_at
    CustomerRequest:
      type: object
      description: Serializer for Customer
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tax_id:
          type: string
          maxLength: 100
        currency:
          type: string
          minLength: 1
          maxLength: 3
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        credit_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
      required:
      - company
      - name
      - tenant
    DeFiPosition:
      type: object
      description: Serializer for DeFi Position
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
        protocol:
          type: string
          format: uuid
        protocol_name:
          type: string
          readOnly: true
        wallet:
          type: string
          format: uuid
        wallet_name:
          type: string
          readOnly: true
        position_type:
          $ref: '#/components/schemas/PositionTypeEnum'
        token_address:
          type: string
          maxLength: 255
        token_symbol:
          type: string
          maxLength: 10
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        apy:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
          nullable: true
        rewards_earned:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - position_type
      - protocol
      - protocol_name
      - tenant
      - token_address
      - token_symbol
      - updated_at
      - user
      - wallet
      - wallet_name
    DeFiPositionRequest:
      type: object
      description: Serializer for DeFi Position
      properties:
        tenant:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
        protocol:
          type: string
          format: uuid
        wallet:
          type: string
          format: uuid
        position_type:
          $ref: '#/components/schemas/PositionTypeEnum'
        token_address:
          type: string
          minLength: 1
          maxLength: 255
        token_symbol:
          type: string
          minLength: 1
          maxLength: 10
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        apy:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
          nullable: true
        rewards_earned:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        is_active:
          type: boolean
      required:
      - amount
      - position_type
      - protocol
      - tenant
      - token_address
      - token_symbol
      - user
      - wallet
    DeFiProtocol:
      type: object
      description: Serializer for DeFi Protocol
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        protocol_type:
          $ref: '#/components/schemas/ProtocolTypeEnum'
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        contract_address:
          type: string
          maxLength: 255
        api_endpoint:
          type: string
          format: uri
          maxLength: 200
        api_key:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        settings: {}
        total_value_locked:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - contract_address
      - created_at
      - id
      - name
      - network
      - protocol_type
      - tenant
      - total_value_locked
      - updated_at
    DeFiProtocolRequest:
      type: object
      description: Serializer for DeFi Protocol
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        protocol_type:
          $ref: '#/components/schemas/ProtocolTypeEnum'
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        contract_address:
          type: string
          minLength: 1
          maxLength: 255
        api_endpoint:
          type: string
          format: uri
          maxLength: 200
        api_key:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        settings: {}
      required:
      - contract_address
      - name
      - network
      - protocol_type
      - tenant
    Document:
      type: object
      description: Serializer for Document
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        filename:
          type: string
          maxLength: 255
        original_filename:
          type: string
          maxLength: 255
        file_path:
          type: string
          maxLength: 500
        file_type:
          type: string
          maxLength: 100
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        file_size_mb:
          type: string
          readOnly: true
        mime_type:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status9c6Enum'
        document_type:
          oneOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        extracted_data:
          nullable: true
        confidence_score:
          type: number
          format: double
          nullable: true
        processing_errors:
          type: string
        uploaded_by:
          type: string
          format: uuid
        processed_by:
          type: string
          format: uuid
          nullable: true
        processed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - created_at
      - file_path
      - file_size
      - file_size_mb
      - file_type
      - filename
      - id
      - original_filename
      - tenant
      - updated_at
      - uploaded_by
    DocumentRequest:
      type: object
      description: Serializer for Document
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        filename:
          type: string
          minLength: 1
          maxLength: 255
        original_filename:
          type: string
          minLength: 1
          maxLength: 255
        file_path:
          type: string
          minLength: 1
          maxLength: 500
        file_type:
          type: string
          minLength: 1
          maxLength: 100
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        mime_type:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status9c6Enum'
        document_type:
          oneOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        extracted_data:
          nullable: true
        confidence_score:
          type: number
          format: double
          nullable: true
        processing_errors:
          type: string
        uploaded_by:
          type: string
          format: uuid
        processed_by:
          type: string
          format: uuid
          nullable: true
        processed_at:
          type: string
          format: date-time
          nullable: true
      required:
      - company
      - file_path
      - file_size
      - file_type
      - filename
      - original_filename
      - tenant
      - uploaded_by
    DocumentTypeEnum:
      enum:
      - invoice
      - receipt
      - bank_statement
      - contract
      - expense_report
      - tax_document
      - other
      type: string
      description: |-
        * `invoice` - Invoice
        * `receipt` - Receipt
        * `bank_statement` - Bank Statement
        * `contract` - Contract
        * `expense_report` - Expense Report
        * `tax_document` - Tax Document
        * `other` - Other
    EntryTypeEnum:
      enum:
      - manual
      - system
      - recurring
      - adjustment
      type: string
      description: |-
        * `manual` - Manual Entry
        * `system` - System Generated
        * `recurring` - Recurring Entry
        * `adjustment` - Adjustment Entry
    IntegrationTypeEnum:
      enum:
      - plaid
      - yodlee
      - teller
      - manual
      type: string
      description: |-
        * `plaid` - Plaid
        * `yodlee` - Yodlee
        * `teller` - Teller
        * `manual` - Manual
    Invoice:
      type: object
      description: Serializer for Invoice
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        customer_name:
          type: string
          readOnly: true
        invoice_number:
          type: string
          maxLength: 50
        invoice_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status03dEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        total_amount:
          type: string
          readOnly: true
        total_tax:
          type: string
          readOnly: true
        total_discount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - customer
      - customer_name
      - due_date
      - id
      - invoice_date
      - invoice_number
      - sent_at
      - tenant
      - total_amount
      - total_discount
      - total_tax
      - updated_at
    InvoiceLine:
      type: object
      description: Serializer for Invoice Line
      properties:
        id:
          type: integer
          readOnly: true
        invoice:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        total_amount:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - description
      - id
      - invoice
      - total_amount
      - unit_price
      - updated_at
    InvoiceLineRequest:
      type: object
      description: Serializer for Invoice Line
      properties:
        invoice:
          type: string
          format: uuid
        description:
          type: string
          minLength: 1
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - description
      - invoice
      - unit_price
    InvoicePayment:
      type: object
      description: Serializer for Invoice Payment
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        invoice:
          type: string
          format: uuid
        invoice_number:
          type: string
          readOnly: true
        customer_name:
          type: string
          readOnly: true
        payment_date:
          type: string
          format: date
        payment_method:
          $ref: '#/components/schemas/InvoicePaymentPaymentMethodEnum'
        payment_reference:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - customer_name
      - id
      - invoice
      - invoice_number
      - payment_date
      - payment_method
      - updated_at
    InvoicePaymentPaymentMethodEnum:
      enum:
      - cash
      - check
      - credit_card
      - bank_transfer
      - paypal
      - stripe
      - other
      type: string
      description: |-
        * `cash` - Cash
        * `check` - Check
        * `credit_card` - Credit Card
        * `bank_transfer` - Bank Transfer
        * `paypal` - PayPal
        * `stripe` - Stripe
        * `other` - Other
    InvoicePaymentRequest:
      type: object
      description: Serializer for Invoice Payment
      properties:
        invoice:
          type: string
          format: uuid
        payment_date:
          type: string
          format: date
        payment_method:
          $ref: '#/components/schemas/InvoicePaymentPaymentMethodEnum'
        payment_reference:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
      required:
      - amount
      - invoice
      - payment_date
      - payment_method
    InvoiceRequest:
      type: object
      description: Serializer for Invoice
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        invoice_number:
          type: string
          minLength: 1
          maxLength: 50
        invoice_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status03dEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - customer
      - due_date
      - invoice_date
      - invoice_number
      - tenant
    InvoiceTemplate:
      type: object
      description: Serializer for Invoice Template
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        description:
          type: string
        template_type:
          $ref: '#/components/schemas/TemplateTypeEnum'
        header_template:
          type: string
        footer_template:
          type: string
        line_item_template:
          type: string
        css_styles:
          type: string
        is_default:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - template_type
      - tenant
      - updated_at
    InvoiceTemplateRequest:
      type: object
      description: Serializer for Invoice Template
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        template_type:
          $ref: '#/components/schemas/TemplateTypeEnum'
        header_template:
          type: string
        footer_template:
          type: string
        line_item_template:
          type: string
        css_styles:
          type: string
        is_default:
          type: boolean
        is_active:
          type: boolean
      required:
      - name
      - template_type
      - tenant
    InvoiceWithLines:
      type: object
      description: Serializer for Invoice with lines
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        customer_name:
          type: string
          readOnly: true
        invoice_number:
          type: string
          maxLength: 50
        invoice_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status03dEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        total_amount:
          type: string
          readOnly: true
        total_tax:
          type: string
          readOnly: true
        total_discount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - customer
      - customer_name
      - due_date
      - id
      - invoice_date
      - invoice_number
      - lines
      - sent_at
      - tenant
      - total_amount
      - total_discount
      - total_tax
      - updated_at
    InvoiceWithLinesRequest:
      type: object
      description: Serializer for Invoice with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        invoice_number:
          type: string
          minLength: 1
          maxLength: 50
        invoice_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status03dEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - customer
      - due_date
      - invoice_date
      - invoice_number
      - tenant
    JobTypeEnum:
      enum:
      - document_categorization
      - data_extraction
      - ocr_processing
      - fraud_detection
      - anomaly_detection
      type: string
      description: |-
        * `document_categorization` - Document Categorization
        * `data_extraction` - Data Extraction
        * `ocr_processing` - OCR Processing
        * `fraud_detection` - Fraud Detection
        * `anomaly_detection` - Anomaly Detection
    JournalEntry:
      type: object
      description: Serializer for Journal Entry
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        date:
          type: string
          format: date
        reference:
          type: string
          maxLength: 100
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status75aEnum'
        entry_type:
          $ref: '#/components/schemas/EntryTypeEnum'
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_by_name:
          type: string
          readOnly: true
        posted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_debit:
          type: string
          readOnly: true
        total_credit:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_by_name
      - company
      - created_at
      - created_by
      - created_by_name
      - date
      - description
      - id
      - posted_at
      - reference
      - tenant
      - total_credit
      - total_debit
      - updated_at
    JournalEntryLine:
      type: object
      description: Serializer for Journal Entry Line
      properties:
        id:
          type: integer
          readOnly: true
        journal_entry:
          type: string
          format: uuid
        account:
          type: string
          format: uuid
        account_name:
          type: string
          readOnly: true
        account_code:
          type: string
          readOnly: true
        description:
          type: string
        debit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        credit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - account
      - account_code
      - account_name
      - created_at
      - description
      - id
      - journal_entry
      - updated_at
    JournalEntryLineRequest:
      type: object
      description: Serializer for Journal Entry Line
      properties:
        journal_entry:
          type: string
          format: uuid
        account:
          type: string
          format: uuid
        description:
          type: string
          minLength: 1
        debit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        credit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
      required:
      - account
      - description
      - journal_entry
    JournalEntryRequest:
      type: object
      description: Serializer for Journal Entry
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        date:
          type: string
          format: date
        reference:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        status:
          $ref: '#/components/schemas/Status75aEnum'
        entry_type:
          $ref: '#/components/schemas/EntryTypeEnum'
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - date
      - description
      - reference
      - tenant
    JournalEntryWithLines:
      type: object
      description: Serializer for Journal Entry with lines
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        date:
          type: string
          format: date
        reference:
          type: string
          maxLength: 100
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status75aEnum'
        entry_type:
          $ref: '#/components/schemas/EntryTypeEnum'
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_by_name:
          type: string
          readOnly: true
        posted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_debit:
          type: string
          readOnly: true
        total_credit:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryLine'
          readOnly: true
      required:
      - approved_by_name
      - company
      - created_at
      - created_by
      - created_by_name
      - date
      - description
      - id
      - lines
      - posted_at
      - reference
      - tenant
      - total_credit
      - total_debit
      - updated_at
    JournalEntryWithLinesRequest:
      type: object
      description: Serializer for Journal Entry with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        date:
          type: string
          format: date
        reference:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        status:
          $ref: '#/components/schemas/Status75aEnum'
        entry_type:
          $ref: '#/components/schemas/EntryTypeEnum'
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - date
      - description
      - reference
      - tenant
    LoginRequest:
      type: object
      description: Serializer for user login
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    ModelTypeEnum:
      enum:
      - categorization
      - extraction
      - ocr
      - fraud_detection
      - anomaly_detection
      type: string
      description: |-
        * `categorization` - Categorization
        * `extraction` - Data Extraction
        * `ocr` - OCR
        * `fraud_detection` - Fraud Detection
        * `anomaly_detection` - Anomaly Detection
    NetworkB4eEnum:
      enum:
      - ethereum
      - polygon
      - bsc
      - solana
      type: string
      description: |-
        * `ethereum` - Ethereum
        * `polygon` - Polygon
        * `bsc` - Binance Smart Chain
        * `solana` - Solana
    NormalBalanceEnum:
      enum:
      - debit
      - credit
      type: string
      description: |-
        * `debit` - Debit
        * `credit` - Credit
    PaginatedAICategorizationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AICategorization'
    PaginatedAIExtractionResultList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AIExtractionResult'
    PaginatedAIModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AIModel'
    PaginatedAIProcessingJobList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AIProcessingJob'
    PaginatedBankAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
    PaginatedBankIntegrationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankIntegration'
    PaginatedBankStatementList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankStatement'
    PaginatedBankTransactionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankTransaction'
    PaginatedChartOfAccountsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChartOfAccounts'
    PaginatedCompanyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    PaginatedCryptoTransactionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CryptoTransaction'
    PaginatedCryptoWalletList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CryptoWallet'
    PaginatedCustomerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    PaginatedDeFiPositionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeFiPosition'
    PaginatedDeFiProtocolList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeFiProtocol'
    PaginatedDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedInvoiceLineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
    PaginatedInvoiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedInvoicePaymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePayment'
    PaginatedInvoiceTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTemplate'
    PaginatedJournalEntryLineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryLine'
    PaginatedJournalEntryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntry'
    PaginatedPurchaseOrderLineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLine'
    PaginatedPurchaseOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrder'
    PaginatedPurchasePaymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchasePayment'
    PaginatedPurchaseReceiptLineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseReceiptLine'
    PaginatedPurchaseReceiptList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseReceipt'
    PaginatedSalesOrderLineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SalesOrderLine'
    PaginatedSalesOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SalesOrder'
    PaginatedSalesQuoteLineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SalesQuoteLine'
    PaginatedSalesQuoteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SalesQuote'
    PaginatedSmartContractList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SmartContract'
    PaginatedSupplierList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
    PaginatedTenantInvitationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TenantInvitation'
    PaginatedTenantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
    PaginatedTokenPriceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TokenPrice'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWeb3IntegrationSettingsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Web3IntegrationSettings'
    PatchedAICategorizationRequest:
      type: object
      description: Serializer for AI Categorization
      properties:
        document:
          type: string
          format: uuid
        category:
          type: string
          minLength: 1
          maxLength: 100
        confidence:
          type: number
          format: double
        ai_model:
          type: string
          minLength: 1
          maxLength: 100
        model_version:
          type: string
          maxLength: 50
        processing_time:
          type: number
          format: double
          nullable: true
        raw_response:
          nullable: true
    PatchedAIExtractionResultRequest:
      type: object
      description: Serializer for AI Extraction Result
      properties:
        document:
          type: string
          format: uuid
        field_name:
          type: string
          minLength: 1
          maxLength: 100
        field_value:
          type: string
          minLength: 1
        confidence:
          type: number
          format: double
        bounding_box:
          nullable: true
        ai_model:
          type: string
          minLength: 1
          maxLength: 100
        model_version:
          type: string
          maxLength: 50
    PatchedAIModelRequest:
      type: object
      description: Serializer for AI Model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        version:
          type: string
          minLength: 1
          maxLength: 50
        model_type:
          $ref: '#/components/schemas/ModelTypeEnum'
        provider:
          $ref: '#/components/schemas/AIModelProviderEnum'
        model_id:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
        is_default:
          type: boolean
        configuration: {}
        performance_metrics: {}
    PatchedAIProcessingJobRequest:
      type: object
      description: Serializer for AI Processing Job
      properties:
        tenant:
          type: string
          format: uuid
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        status:
          $ref: '#/components/schemas/Status9c6Enum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        documents:
          type: array
          items:
            type: string
            format: uuid
        parameters: {}
        results:
          nullable: true
        error_message:
          type: string
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        created_by:
          type: string
          format: uuid
    PatchedBankAccountRequest:
      type: object
      description: Serializer for Bank Account
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        account_number:
          type: string
          maxLength: 50
        bank_name:
          type: string
          minLength: 1
          maxLength: 255
        account_type:
          $ref: '#/components/schemas/AccountTypeEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        opening_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        last_reconciliation_date:
          type: string
          format: date
          nullable: true
    PatchedBankIntegrationRequest:
      type: object
      description: Serializer for Bank Integration
      properties:
        bank_account:
          type: string
          format: uuid
        integration_type:
          $ref: '#/components/schemas/IntegrationTypeEnum'
        provider:
          $ref: '#/components/schemas/Provider9feEnum'
        api_key:
          type: string
          maxLength: 255
        api_secret:
          type: string
          maxLength: 255
        endpoint_url:
          type: string
          format: uri
          maxLength: 200
        is_active:
          type: boolean
        last_sync_date:
          type: string
          format: date-time
          nullable: true
        sync_frequency:
          $ref: '#/components/schemas/SyncFrequencyEnum'
    PatchedBankStatementRequest:
      type: object
      description: Serializer for Bank Statement
      properties:
        bank_account:
          type: string
          format: uuid
        statement_date:
          type: string
          format: date
        opening_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        closing_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        file_path:
          type: string
          maxLength: 500
        is_processed:
          type: boolean
        processed_at:
          type: string
          format: date-time
          nullable: true
    PatchedBankTransactionRequest:
      type: object
      description: Serializer for Bank Transaction
      properties:
        bank_account:
          type: string
          format: uuid
        transaction_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          minLength: 1
          maxLength: 255
        reference:
          type: string
          maxLength: 100
        transaction_type:
          $ref: '#/components/schemas/BankTransactionTransactionTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 3
        category:
          type: string
          maxLength: 100
        is_reconciled:
          type: boolean
        reconciliation_date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
    PatchedChartOfAccountsRequest:
      type: object
      description: Serializer for Chart of Accounts
      properties:
        tenant:
          type: string
          format: uuid
        code:
          type: string
          minLength: 1
          maxLength: 20
        name:
          type: string
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        parent:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
        is_active:
          type: boolean
        is_system:
          type: boolean
        normal_balance:
          $ref: '#/components/schemas/NormalBalanceEnum'
    PatchedCompanyRequest:
      type: object
      description: Serializer for Company model
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        legal_name:
          type: string
          maxLength: 255
        tax_id:
          type: string
          maxLength: 100
        registration_number:
          type: string
          maxLength: 100
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        website:
          type: string
          format: uri
          maxLength: 200
        currency:
          type: string
          minLength: 1
          maxLength: 3
        timezone:
          type: string
          minLength: 1
          maxLength: 50
        fiscal_year_start:
          type: string
          format: date
          nullable: true
        logo:
          type: string
          format: binary
          nullable: true
        is_primary:
          type: boolean
        is_active:
          type: boolean
    PatchedCryptoTransactionRequest:
      type: object
      description: Serializer for Crypto Transaction
      properties:
        wallet:
          type: string
          format: uuid
        tx_hash:
          type: string
          minLength: 1
          maxLength: 255
        transaction_type:
          $ref: '#/components/schemas/CryptoTransactionTransactionTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        token_symbol:
          type: string
          minLength: 1
          maxLength: 10
        token_address:
          type: string
          maxLength: 255
        token_name:
          type: string
          maxLength: 100
        gas_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,18})?$
          nullable: true
        gas_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,18})?$
          nullable: true
        gas_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/CryptoTransactionStatusEnum'
        block_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        block_hash:
          type: string
          maxLength: 255
        from_address:
          type: string
          minLength: 1
          maxLength: 255
        to_address:
          type: string
          minLength: 1
          maxLength: 255
        contract_address:
          type: string
          maxLength: 255
        function_name:
          type: string
          maxLength: 100
        function_args:
          nullable: true
    PatchedCryptoWalletRequest:
      type: object
      description: Serializer for Crypto Wallet
      properties:
        tenant:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        address:
          type: string
          minLength: 1
          maxLength: 255
        network:
          $ref: '#/components/schemas/CryptoWalletNetworkEnum'
        wallet_type:
          $ref: '#/components/schemas/WalletTypeEnum'
        is_active:
          type: boolean
        is_primary:
          type: boolean
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        last_sync:
          type: string
          format: date-time
          nullable: true
        public_key:
          type: string
          maxLength: 255
        encrypted_private_key:
          type: string
        mnemonic_phrase:
          type: string
    PatchedCustomerRequest:
      type: object
      description: Serializer for Customer
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tax_id:
          type: string
          maxLength: 100
        currency:
          type: string
          minLength: 1
          maxLength: 3
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        credit_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
    PatchedDeFiPositionRequest:
      type: object
      description: Serializer for DeFi Position
      properties:
        tenant:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
        protocol:
          type: string
          format: uuid
        wallet:
          type: string
          format: uuid
        position_type:
          $ref: '#/components/schemas/PositionTypeEnum'
        token_address:
          type: string
          minLength: 1
          maxLength: 255
        token_symbol:
          type: string
          minLength: 1
          maxLength: 10
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        apy:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
          nullable: true
        rewards_earned:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,18})?$
        is_active:
          type: boolean
    PatchedDeFiProtocolRequest:
      type: object
      description: Serializer for DeFi Protocol
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        protocol_type:
          $ref: '#/components/schemas/ProtocolTypeEnum'
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        contract_address:
          type: string
          minLength: 1
          maxLength: 255
        api_endpoint:
          type: string
          format: uri
          maxLength: 200
        api_key:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        settings: {}
    PatchedDocumentRequest:
      type: object
      description: Serializer for Document
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        filename:
          type: string
          minLength: 1
          maxLength: 255
        original_filename:
          type: string
          minLength: 1
          maxLength: 255
        file_path:
          type: string
          minLength: 1
          maxLength: 500
        file_type:
          type: string
          minLength: 1
          maxLength: 100
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        mime_type:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status9c6Enum'
        document_type:
          oneOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        extracted_data:
          nullable: true
        confidence_score:
          type: number
          format: double
          nullable: true
        processing_errors:
          type: string
        uploaded_by:
          type: string
          format: uuid
        processed_by:
          type: string
          format: uuid
          nullable: true
        processed_at:
          type: string
          format: date-time
          nullable: true
    PatchedInvoicePaymentRequest:
      type: object
      description: Serializer for Invoice Payment
      properties:
        invoice:
          type: string
          format: uuid
        payment_date:
          type: string
          format: date
        payment_method:
          $ref: '#/components/schemas/InvoicePaymentPaymentMethodEnum'
        payment_reference:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
    PatchedInvoiceTemplateRequest:
      type: object
      description: Serializer for Invoice Template
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        template_type:
          $ref: '#/components/schemas/TemplateTypeEnum'
        header_template:
          type: string
        footer_template:
          type: string
        line_item_template:
          type: string
        css_styles:
          type: string
        is_default:
          type: boolean
        is_active:
          type: boolean
    PatchedInvoiceWithLinesRequest:
      type: object
      description: Serializer for Invoice with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        invoice_number:
          type: string
          minLength: 1
          maxLength: 50
        invoice_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status03dEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
    PatchedJournalEntryWithLinesRequest:
      type: object
      description: Serializer for Journal Entry with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        date:
          type: string
          format: date
        reference:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        status:
          $ref: '#/components/schemas/Status75aEnum'
        entry_type:
          $ref: '#/components/schemas/EntryTypeEnum'
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
    PatchedPurchaseOrderWithLinesRequest:
      type: object
      description: Serializer for Purchase Order with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        order_number:
          type: string
          minLength: 1
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status278Enum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
    PatchedPurchasePaymentRequest:
      type: object
      description: Serializer for Purchase Payment
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        payment_date:
          type: string
          format: date
        payment_method:
          $ref: '#/components/schemas/PurchasePaymentPaymentMethodEnum'
        payment_reference:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
    PatchedPurchaseReceiptWithLinesRequest:
      type: object
      description: Serializer for Purchase Receipt with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        receipt_number:
          type: string
          minLength: 1
          maxLength: 50
        receipt_date:
          type: string
          format: date
        purchase_order:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/Status0c8Enum'
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
    PatchedSalesOrderWithLinesRequest:
      type: object
      description: Serializer for Sales Order with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        order_number:
          type: string
          minLength: 1
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StatusE6aEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
    PatchedSalesQuoteWithLinesRequest:
      type: object
      description: Serializer for Sales Quote with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        quote_number:
          type: string
          minLength: 1
          maxLength: 50
        quote_date:
          type: string
          format: date
        valid_until:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status126Enum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
        converted_to_order:
          type: string
          format: uuid
          nullable: true
    PatchedSmartContractRequest:
      type: object
      description: Serializer for Smart Contract
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        address:
          type: string
          minLength: 1
          maxLength: 255
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        contract_type:
          $ref: '#/components/schemas/ContractTypeEnum'
        abi:
          nullable: true
        bytecode:
          type: string
        source_code:
          type: string
        compiler_version:
          type: string
          maxLength: 50
        is_verified:
          type: boolean
        is_active:
          type: boolean
        deployment_tx:
          type: string
          maxLength: 255
        deployment_block:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        created_by:
          type: string
          format: uuid
    PatchedSupplierRequest:
      type: object
      description: Serializer for Supplier
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tax_id:
          type: string
          maxLength: 100
        currency:
          type: string
          minLength: 1
          maxLength: 3
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        credit_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
    PatchedTenantRequest:
      type: object
      description: Serializer for Tenant model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        plan:
          $ref: '#/components/schemas/PlanEnum'
        is_active:
          type: boolean
        max_users:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_storage_gb:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        features: {}
        settings: {}
    PatchedTokenPriceRequest:
      type: object
      description: Serializer for Token Price
      properties:
        token_address:
          type: string
          minLength: 1
          maxLength: 255
        token_symbol:
          type: string
          minLength: 1
          maxLength: 10
        network:
          type: string
          minLength: 1
          maxLength: 50
        price_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
        price_btc:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
          nullable: true
        price_eth:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
          nullable: true
        market_cap:
          type: string
          format: decimal
          pattern: ^-?\d{0,28}(?:\.\d{0,2})?$
          nullable: true
        volume_24h:
          type: string
          format: decimal
          pattern: ^-?\d{0,28}(?:\.\d{0,2})?$
          nullable: true
        price_change_24h:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
          nullable: true
        source:
          type: string
          minLength: 1
          maxLength: 100
    PatchedUserProfileRequest:
      type: object
      description: Serializer for UserProfile model
      properties:
        phone:
          type: string
          maxLength: 20
        timezone:
          type: string
          minLength: 1
          maxLength: 50
        language:
          type: string
          minLength: 1
          maxLength: 10
        two_factor_enabled:
          type: boolean
        web3_wallet_address:
          type: string
          maxLength: 255
        avatar:
          type: string
          format: binary
          nullable: true
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
    PatchedUserRequest:
      type: object
      description: Serializer for User model
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/UserRoleEnum'
        is_active:
          type: boolean
    PatchedWeb3IntegrationSettingsRequest:
      type: object
      description: Serializer for Web3 Integration Settings
      properties:
        tenant:
          type: string
          format: uuid
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        rpc_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        api_key:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        settings: {}
    PaymentTermsEnum:
      enum:
      - net_15
      - net_30
      - net_60
      - net_90
      - due_on_receipt
      type: string
      description: |-
        * `net_15` - Net 15
        * `net_30` - Net 30
        * `net_60` - Net 60
        * `net_90` - Net 90
        * `due_on_receipt` - Due on Receipt
    PlanEnum:
      enum:
      - basic
      - professional
      - enterprise
      type: string
      description: |-
        * `basic` - Basic
        * `professional` - Professional
        * `enterprise` - Enterprise
    PositionTypeEnum:
      enum:
      - liquidity_provider
      - borrower
      - lender
      - staker
      - farmer
      type: string
      description: |-
        * `liquidity_provider` - Liquidity Provider
        * `borrower` - Borrower
        * `lender` - Lender
        * `staker` - Staker
        * `farmer` - Yield Farmer
    PriorityEnum:
      enum:
      - 1
      - 3
      - 5
      - 7
      - 9
      type: integer
      description: |-
        * `1` - Low
        * `3` - Normal
        * `5` - High
        * `7` - Urgent
        * `9` - Critical
    ProtocolTypeEnum:
      enum:
      - lending
      - dex
      - yield_farming
      - staking
      - insurance
      - derivatives
      type: string
      description: |-
        * `lending` - Lending
        * `dex` - Decentralized Exchange
        * `yield_farming` - Yield Farming
        * `staking` - Staking
        * `insurance` - Insurance
        * `derivatives` - Derivatives
    Provider9feEnum:
      enum:
      - plaid
      - yodlee
      - teller
      - manual
      type: string
      description: |-
        * `plaid` - Plaid
        * `yodlee` - Yodlee
        * `teller` - Teller
        * `manual` - Manual
    PurchaseOrder:
      type: object
      description: Serializer for Purchase Order
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        supplier_name:
          type: string
          readOnly: true
        order_number:
          type: string
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status278Enum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        total_amount:
          type: string
          readOnly: true
        total_tax:
          type: string
          readOnly: true
        total_discount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        received_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - id
      - order_date
      - order_number
      - received_at
      - supplier
      - supplier_name
      - tenant
      - total_amount
      - total_discount
      - total_tax
      - updated_at
    PurchaseOrderLine:
      type: object
      description: Serializer for Purchase Order Line
      properties:
        id:
          type: integer
          readOnly: true
        purchase_order:
          type: string
          format: uuid
        item:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        total_amount:
          type: string
          readOnly: true
        received_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - description
      - id
      - item
      - purchase_order
      - quantity
      - total_amount
      - unit_price
      - updated_at
    PurchaseOrderLineRequest:
      type: object
      description: Serializer for Purchase Order Line
      properties:
        purchase_order:
          type: string
          format: uuid
        item:
          type: string
          format: uuid
        description:
          type: string
          minLength: 1
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        received_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - description
      - item
      - purchase_order
      - quantity
      - unit_price
    PurchaseOrderRequest:
      type: object
      description: Serializer for Purchase Order
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        order_number:
          type: string
          minLength: 1
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status278Enum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - order_date
      - order_number
      - supplier
      - tenant
    PurchaseOrderWithLines:
      type: object
      description: Serializer for Purchase Order with lines
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        supplier_name:
          type: string
          readOnly: true
        order_number:
          type: string
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status278Enum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        total_amount:
          type: string
          readOnly: true
        total_tax:
          type: string
          readOnly: true
        total_discount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        received_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLine'
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - id
      - lines
      - order_date
      - order_number
      - received_at
      - supplier
      - supplier_name
      - tenant
      - total_amount
      - total_discount
      - total_tax
      - updated_at
    PurchaseOrderWithLinesRequest:
      type: object
      description: Serializer for Purchase Order with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        order_number:
          type: string
          minLength: 1
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status278Enum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - order_date
      - order_number
      - supplier
      - tenant
    PurchasePayment:
      type: object
      description: Serializer for Purchase Payment
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        supplier_name:
          type: string
          readOnly: true
        payment_date:
          type: string
          format: date
        payment_method:
          $ref: '#/components/schemas/PurchasePaymentPaymentMethodEnum'
        payment_reference:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - company
      - created_at
      - id
      - payment_date
      - payment_method
      - supplier
      - supplier_name
      - tenant
      - updated_at
    PurchasePaymentPaymentMethodEnum:
      enum:
      - cash
      - check
      - bank_transfer
      - credit_card
      - other
      type: string
      description: |-
        * `cash` - Cash
        * `check` - Check
        * `bank_transfer` - Bank Transfer
        * `credit_card` - Credit Card
        * `other` - Other
    PurchasePaymentRequest:
      type: object
      description: Serializer for Purchase Payment
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        payment_date:
          type: string
          format: date
        payment_method:
          $ref: '#/components/schemas/PurchasePaymentPaymentMethodEnum'
        payment_reference:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
      required:
      - amount
      - company
      - payment_date
      - payment_method
      - supplier
      - tenant
    PurchaseReceipt:
      type: object
      description: Serializer for Purchase Receipt
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        supplier_name:
          type: string
          readOnly: true
        receipt_number:
          type: string
          maxLength: 50
        receipt_date:
          type: string
          format: date
        purchase_order:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/Status0c8Enum'
        total_amount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - id
      - purchase_order
      - receipt_date
      - receipt_number
      - supplier
      - supplier_name
      - tenant
      - total_amount
      - updated_at
    PurchaseReceiptLine:
      type: object
      description: Serializer for Purchase Receipt Line
      properties:
        id:
          type: integer
          readOnly: true
        purchase_receipt:
          type: string
          format: uuid
        purchase_order_line:
          type: integer
        item:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 255
        quantity_received:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_amount:
          type: string
          readOnly: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - id
      - item
      - purchase_order_line
      - purchase_receipt
      - quantity_received
      - total_amount
      - unit_price
      - updated_at
    PurchaseReceiptLineRequest:
      type: object
      description: Serializer for Purchase Receipt Line
      properties:
        purchase_receipt:
          type: string
          format: uuid
        purchase_order_line:
          type: integer
        item:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 255
        quantity_received:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
      required:
      - item
      - purchase_order_line
      - purchase_receipt
      - quantity_received
      - unit_price
    PurchaseReceiptRequest:
      type: object
      description: Serializer for Purchase Receipt
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        receipt_number:
          type: string
          minLength: 1
          maxLength: 50
        receipt_date:
          type: string
          format: date
        purchase_order:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/Status0c8Enum'
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - purchase_order
      - receipt_date
      - receipt_number
      - supplier
      - tenant
    PurchaseReceiptWithLines:
      type: object
      description: Serializer for Purchase Receipt with lines
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        supplier_name:
          type: string
          readOnly: true
        receipt_number:
          type: string
          maxLength: 50
        receipt_date:
          type: string
          format: date
        purchase_order:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/Status0c8Enum'
        total_amount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseReceiptLine'
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - id
      - lines
      - purchase_order
      - receipt_date
      - receipt_number
      - supplier
      - supplier_name
      - tenant
      - total_amount
      - updated_at
    PurchaseReceiptWithLinesRequest:
      type: object
      description: Serializer for Purchase Receipt with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        supplier:
          type: string
          format: uuid
        receipt_number:
          type: string
          minLength: 1
          maxLength: 50
        receipt_date:
          type: string
          format: date
        purchase_order:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/Status0c8Enum'
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - purchase_order
      - receipt_date
      - receipt_number
      - supplier
      - tenant
    Role995Enum:
      enum:
      - tenant_admin
      - firm_admin
      - cfo
      - accountant
      - staff
      type: string
      description: |-
        * `tenant_admin` - Tenant Admin
        * `firm_admin` - Firm Admin
        * `cfo` - CFO
        * `accountant` - Accountant
        * `staff` - Staff
    SalesOrder:
      type: object
      description: Serializer for Sales Order
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        customer_name:
          type: string
          readOnly: true
        order_number:
          type: string
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StatusE6aEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        total_amount:
          type: string
          readOnly: true
        total_tax:
          type: string
          readOnly: true
        total_discount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        shipped_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - customer
      - customer_name
      - id
      - order_date
      - order_number
      - shipped_at
      - tenant
      - total_amount
      - total_discount
      - total_tax
      - updated_at
    SalesOrderLine:
      type: object
      description: Serializer for Sales Order Line
      properties:
        id:
          type: integer
          readOnly: true
        sales_order:
          type: string
          format: uuid
        item:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        total_amount:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - description
      - id
      - item
      - quantity
      - sales_order
      - total_amount
      - unit_price
      - updated_at
    SalesOrderLineRequest:
      type: object
      description: Serializer for Sales Order Line
      properties:
        sales_order:
          type: string
          format: uuid
        item:
          type: string
          format: uuid
        description:
          type: string
          minLength: 1
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - description
      - item
      - quantity
      - sales_order
      - unit_price
    SalesOrderRequest:
      type: object
      description: Serializer for Sales Order
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        order_number:
          type: string
          minLength: 1
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StatusE6aEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - customer
      - order_date
      - order_number
      - tenant
    SalesOrderWithLines:
      type: object
      description: Serializer for Sales Order with lines
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        customer_name:
          type: string
          readOnly: true
        order_number:
          type: string
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StatusE6aEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        total_amount:
          type: string
          readOnly: true
        total_tax:
          type: string
          readOnly: true
        total_discount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        shipped_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/SalesOrderLine'
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - customer
      - customer_name
      - id
      - lines
      - order_date
      - order_number
      - shipped_at
      - tenant
      - total_amount
      - total_discount
      - total_tax
      - updated_at
    SalesOrderWithLinesRequest:
      type: object
      description: Serializer for Sales Order with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        order_number:
          type: string
          minLength: 1
          maxLength: 50
        order_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StatusE6aEnum'
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - customer
      - order_date
      - order_number
      - tenant
    SalesQuote:
      type: object
      description: Serializer for Sales Quote
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        customer_name:
          type: string
          readOnly: true
        quote_number:
          type: string
          maxLength: 50
        quote_date:
          type: string
          format: date
        valid_until:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status126Enum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        total_amount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        converted_to_order:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - customer
      - customer_name
      - id
      - quote_date
      - quote_number
      - tenant
      - total_amount
      - updated_at
    SalesQuoteLine:
      type: object
      description: Serializer for Sales Quote Line
      properties:
        id:
          type: integer
          readOnly: true
        sales_quote:
          type: string
          format: uuid
        item:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        total_amount:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - description
      - id
      - item
      - quantity
      - sales_quote
      - total_amount
      - unit_price
      - updated_at
    SalesQuoteLineRequest:
      type: object
      description: Serializer for Sales Quote Line
      properties:
        sales_quote:
          type: string
          format: uuid
        item:
          type: string
          format: uuid
        description:
          type: string
          minLength: 1
          maxLength: 255
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        discount_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - description
      - item
      - quantity
      - sales_quote
      - unit_price
    SalesQuoteRequest:
      type: object
      description: Serializer for Sales Quote
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        quote_number:
          type: string
          minLength: 1
          maxLength: 50
        quote_date:
          type: string
          format: date
        valid_until:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status126Enum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
        converted_to_order:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - customer
      - quote_date
      - quote_number
      - tenant
    SalesQuoteWithLines:
      type: object
      description: Serializer for Sales Quote with lines
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        customer_name:
          type: string
          readOnly: true
        quote_number:
          type: string
          maxLength: 50
        quote_date:
          type: string
          format: date
        valid_until:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status126Enum'
        currency:
          type: string
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        total_amount:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
          readOnly: true
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        converted_to_order:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/SalesQuoteLine'
          readOnly: true
      required:
      - approved_at
      - company
      - created_at
      - created_by
      - created_by_name
      - customer
      - customer_name
      - id
      - lines
      - quote_date
      - quote_number
      - tenant
      - total_amount
      - updated_at
    SalesQuoteWithLinesRequest:
      type: object
      description: Serializer for Sales Quote with lines
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        customer:
          type: string
          format: uuid
        quote_number:
          type: string
          minLength: 1
          maxLength: 50
        quote_date:
          type: string
          format: date
        valid_until:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status126Enum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        notes:
          type: string
        terms_conditions:
          type: string
        created_by:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
        converted_to_order:
          type: string
          format: uuid
          nullable: true
      required:
      - company
      - created_by
      - customer
      - quote_date
      - quote_number
      - tenant
    SmartContract:
      type: object
      description: Serializer for Smart Contract
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        contract_type:
          $ref: '#/components/schemas/ContractTypeEnum'
        contract_type_display:
          type: string
          readOnly: true
        abi:
          nullable: true
        bytecode:
          type: string
        source_code:
          type: string
        compiler_version:
          type: string
          maxLength: 50
        is_verified:
          type: boolean
        is_active:
          type: boolean
        deployment_tx:
          type: string
          maxLength: 255
        deployment_block:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        created_by:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - contract_type
      - contract_type_display
      - created_at
      - created_by
      - id
      - name
      - network
      - tenant
      - updated_at
    SmartContractRequest:
      type: object
      description: Serializer for Smart Contract
      properties:
        tenant:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 255
        address:
          type: string
          minLength: 1
          maxLength: 255
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        contract_type:
          $ref: '#/components/schemas/ContractTypeEnum'
        abi:
          nullable: true
        bytecode:
          type: string
        source_code:
          type: string
        compiler_version:
          type: string
          maxLength: 50
        is_verified:
          type: boolean
        is_active:
          type: boolean
        deployment_tx:
          type: string
          maxLength: 255
        deployment_block:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        created_by:
          type: string
          format: uuid
      required:
      - address
      - contract_type
      - created_by
      - name
      - network
      - tenant
    Status03dEnum:
      enum:
      - draft
      - sent
      - viewed
      - paid
      - overdue
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `sent` - Sent
        * `viewed` - Viewed
        * `paid` - Paid
        * `overdue` - Overdue
        * `cancelled` - Cancelled
    Status0c8Enum:
      enum:
      - draft
      - approved
      - received
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `approved` - Approved
        * `received` - Received
        * `cancelled` - Cancelled
    Status126Enum:
      enum:
      - draft
      - sent
      - viewed
      - accepted
      - rejected
      - expired
      type: string
      description: |-
        * `draft` - Draft
        * `sent` - Sent
        * `viewed` - Viewed
        * `accepted` - Accepted
        * `rejected` - Rejected
        * `expired` - Expired
    Status278Enum:
      enum:
      - draft
      - sent
      - confirmed
      - partially_received
      - received
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `sent` - Sent
        * `confirmed` - Confirmed
        * `partially_received` - Partially Received
        * `received` - Received
        * `cancelled` - Cancelled
    Status75aEnum:
      enum:
      - draft
      - posted
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `posted` - Posted
        * `cancelled` - Cancelled
    Status9c6Enum:
      enum:
      - pending
      - processing
      - completed
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `cancelled` - Cancelled
    StatusE6aEnum:
      enum:
      - draft
      - confirmed
      - processing
      - shipped
      - delivered
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `confirmed` - Confirmed
        * `processing` - Processing
        * `shipped` - Shipped
        * `delivered` - Delivered
        * `cancelled` - Cancelled
    Supplier:
      type: object
      description: Serializer for Supplier
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tax_id:
          type: string
          maxLength: 100
        currency:
          type: string
          maxLength: 3
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        credit_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        total_orders:
          type: string
          readOnly: true
        total_spent:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - created_at
      - id
      - name
      - tenant
      - total_orders
      - total_spent
      - updated_at
    SupplierRequest:
      type: object
      description: Serializer for Supplier
      properties:
        tenant:
          type: string
          format: uuid
        company:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tax_id:
          type: string
          maxLength: 100
        currency:
          type: string
          minLength: 1
          maxLength: 3
        payment_terms:
          $ref: '#/components/schemas/PaymentTermsEnum'
        credit_limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        is_active:
          type: boolean
      required:
      - company
      - name
      - tenant
    SyncFrequencyEnum:
      enum:
      - daily
      - weekly
      - monthly
      type: string
      description: |-
        * `daily` - Daily
        * `weekly` - Weekly
        * `monthly` - Monthly
    TemplateTypeEnum:
      enum:
      - html
      - pdf
      - email
      type: string
      description: |-
        * `html` - HTML Template
        * `pdf` - PDF Template
        * `email` - Email Template
    Tenant:
      type: object
      description: Serializer for Tenant model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        plan:
          $ref: '#/components/schemas/PlanEnum'
        is_active:
          type: boolean
        max_users:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_storage_gb:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        features: {}
        settings: {}
        active_users_count:
          type: string
          readOnly: true
        companies_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - active_users_count
      - companies_count
      - created_at
      - id
      - name
      - updated_at
    TenantInvitation:
      type: object
      description: Serializer for Tenant Invitation
      properties:
        id:
          type: integer
          readOnly: true
        tenant:
          type: string
          format: uuid
        tenant_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role995Enum'
        invited_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        token:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - expires_at
      - id
      - invited_by
      - is_accepted
      - role
      - tenant
      - tenant_name
      - token
      - updated_at
    TenantInvitationRequest:
      type: object
      description: Serializer for Tenant Invitation
      properties:
        tenant:
          type: string
          format: uuid
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role995Enum'
      required:
      - email
      - role
      - tenant
    TenantRequest:
      type: object
      description: Serializer for Tenant model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        plan:
          $ref: '#/components/schemas/PlanEnum'
        is_active:
          type: boolean
        max_users:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_storage_gb:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        features: {}
        settings: {}
      required:
      - name
    TenantStats:
      type: object
      description: Serializer for Tenant statistics
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        plan:
          $ref: '#/components/schemas/PlanEnum'
        max_users:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        max_storage_gb:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        active_users_count:
          type: string
          readOnly: true
        companies_count:
          type: string
          readOnly: true
        storage_used_gb:
          type: string
          readOnly: true
        storage_percentage:
          type: string
          readOnly: true
      required:
      - active_users_count
      - companies_count
      - id
      - name
      - storage_percentage
      - storage_used_gb
    TokenPrice:
      type: object
      description: Serializer for Token Price
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        token_address:
          type: string
          maxLength: 255
        token_symbol:
          type: string
          maxLength: 10
        network:
          type: string
          maxLength: 50
        price_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
        price_btc:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
          nullable: true
        price_eth:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
          nullable: true
        market_cap:
          type: string
          format: decimal
          pattern: ^-?\d{0,28}(?:\.\d{0,2})?$
          nullable: true
        volume_24h:
          type: string
          format: decimal
          pattern: ^-?\d{0,28}(?:\.\d{0,2})?$
          nullable: true
        price_change_24h:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
          nullable: true
        source:
          type: string
          maxLength: 100
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - network
      - price_usd
      - timestamp
      - token_address
      - token_symbol
    TokenPriceRequest:
      type: object
      description: Serializer for Token Price
      properties:
        token_address:
          type: string
          minLength: 1
          maxLength: 255
        token_symbol:
          type: string
          minLength: 1
          maxLength: 10
        network:
          type: string
          minLength: 1
          maxLength: 50
        price_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
        price_btc:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
          nullable: true
        price_eth:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,8})?$
          nullable: true
        market_cap:
          type: string
          format: decimal
          pattern: ^-?\d{0,28}(?:\.\d{0,2})?$
          nullable: true
        volume_24h:
          type: string
          format: decimal
          pattern: ^-?\d{0,28}(?:\.\d{0,2})?$
          nullable: true
        price_change_24h:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,4})?$
          nullable: true
        source:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - network
      - price_usd
      - token_address
      - token_symbol
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TypeEnum:
      enum:
      - asset
      - liability
      - equity
      - revenue
      - expense
      type: string
      description: |-
        * `asset` - Asset
        * `liability` - Liability
        * `equity` - Equity
        * `revenue` - Revenue
        * `expense` - Expense
    User:
      type: object
      description: Serializer for User model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/UserRoleEnum'
        role_display:
          type: string
          readOnly: true
        is_active:
          type: boolean
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - full_name
      - id
      - last_login
      - role_display
      - updated_at
      - username
    UserProfile:
      type: object
      description: Serializer for UserProfile model
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        phone:
          type: string
          maxLength: 20
        timezone:
          type: string
          maxLength: 50
        language:
          type: string
          maxLength: 10
        two_factor_enabled:
          type: boolean
        web3_wallet_address:
          type: string
          maxLength: 255
        avatar:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
      - user
    UserProfileRequest:
      type: object
      description: Serializer for UserProfile model
      properties:
        phone:
          type: string
          maxLength: 20
        timezone:
          type: string
          minLength: 1
          maxLength: 50
        language:
          type: string
          minLength: 1
          maxLength: 10
        two_factor_enabled:
          type: boolean
        web3_wallet_address:
          type: string
          maxLength: 255
        avatar:
          type: string
          format: binary
          nullable: true
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
    UserRequest:
      type: object
      description: Serializer for User model
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/UserRoleEnum'
        is_active:
          type: boolean
      required:
      - email
      - username
    UserRoleEnum:
      enum:
      - platform_admin
      - tenant_admin
      - firm_admin
      - cfo
      - accountant
      - staff
      type: string
      description: |-
        * `platform_admin` - Platform Admin
        * `tenant_admin` - Tenant Admin
        * `firm_admin` - Firm Admin
        * `cfo` - CFO
        * `accountant` - Accountant
        * `staff` - Staff
    WalletTypeEnum:
      enum:
      - metamask
      - walletconnect
      - coinbase
      - trust_wallet
      - hardware
      - exchange
      type: string
      description: |-
        * `metamask` - MetaMask
        * `walletconnect` - WalletConnect
        * `coinbase` - Coinbase Wallet
        * `trust_wallet` - Trust Wallet
        * `hardware` - Hardware Wallet
        * `exchange` - Exchange Wallet
    Web3IntegrationSettings:
      type: object
      description: Serializer for Web3 Integration Settings
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tenant:
          type: string
          format: uuid
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        rpc_url:
          type: string
          format: uri
          maxLength: 200
        api_key:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        settings: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - network
      - rpc_url
      - tenant
      - updated_at
    Web3IntegrationSettingsRequest:
      type: object
      description: Serializer for Web3 Integration Settings
      properties:
        tenant:
          type: string
          format: uuid
        network:
          $ref: '#/components/schemas/NetworkB4eEnum'
        rpc_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        api_key:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        settings: {}
      required:
      - network
      - rpc_url
      - tenant
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
