# Generated by Django 5.2.5 on 2025-08-30 15:16

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AICategorization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=100)),
                ('confidence', models.FloatField()),
                ('ai_model', models.CharField(max_length=100)),
                ('model_version', models.CharField(blank=True, max_length=50)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('raw_response', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'AI Categorization',
                'verbose_name_plural': 'AI Categorizations',
                'db_table': 'ai_categorizations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIExtractionResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('field_name', models.CharField(max_length=100)),
                ('field_value', models.TextField()),
                ('confidence', models.FloatField()),
                ('bounding_box', models.JSONField(blank=True, null=True)),
                ('ai_model', models.CharField(max_length=100)),
                ('model_version', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'AI Extraction Result',
                'verbose_name_plural': 'AI Extraction Results',
                'db_table': 'ai_extraction_results',
                'ordering': ['field_name', '-confidence'],
            },
        ),
        migrations.CreateModel(
            name='AIProcessingJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_type', models.CharField(choices=[('document_categorization', 'Document Categorization'), ('data_extraction', 'Data Extraction'), ('ocr_processing', 'OCR Processing'), ('fraud_detection', 'Fraud Detection'), ('anomaly_detection', 'Anomaly Detection')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.IntegerField(choices=[(1, 'Low'), (3, 'Normal'), (5, 'High'), (7, 'Urgent'), (9, 'Critical')], default=5)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('results', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Processing Job',
                'verbose_name_plural': 'AI Processing Jobs',
                'db_table': 'ai_processing_jobs',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIProcessingLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'AI Processing Log',
                'verbose_name_plural': 'AI Processing Logs',
                'db_table': 'ai_processing_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_type', models.CharField(max_length=100)),
                ('file_size', models.BigIntegerField()),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('document_type', models.CharField(blank=True, choices=[('invoice', 'Invoice'), ('receipt', 'Receipt'), ('bank_statement', 'Bank Statement'), ('contract', 'Contract'), ('expense_report', 'Expense Report'), ('tax_document', 'Tax Document'), ('other', 'Other')], max_length=50)),
                ('extracted_data', models.JSONField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('processing_errors', models.TextField(blank=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=50)),
                ('model_type', models.CharField(choices=[('categorization', 'Categorization'), ('extraction', 'Data Extraction'), ('ocr', 'OCR'), ('fraud_detection', 'Fraud Detection'), ('anomaly_detection', 'Anomaly Detection')], max_length=50)),
                ('provider', models.CharField(choices=[('openai', 'OpenAI'), ('google', 'Google'), ('azure', 'Microsoft Azure'), ('aws', 'Amazon AWS'), ('custom', 'Custom')], max_length=100)),
                ('model_id', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('performance_metrics', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'db_table': 'ai_models',
                'unique_together': {('name', 'version')},
            },
        ),
    ]
