# Generated by Django 5.2.5 on 2025-08-30 15:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TokenPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token_address', models.CharField(max_length=255)),
                ('token_symbol', models.CharField(max_length=10)),
                ('network', models.CharField(max_length=50)),
                ('price_usd', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price_btc', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('price_eth', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('market_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('volume_24h', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('price_change_24h', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('source', models.CharField(default='coinmarketcap', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Token Price',
                'verbose_name_plural': 'Token Prices',
                'db_table': 'token_prices',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CryptoWallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('network', models.CharField(choices=[('ethereum', 'Ethereum'), ('polygon', 'Polygon'), ('bsc', 'Binance Smart Chain'), ('solana', 'Solana'), ('bitcoin', 'Bitcoin'), ('cardano', 'Cardano'), ('polkadot', 'Polkadot')], max_length=50)),
                ('wallet_type', models.CharField(choices=[('metamask', 'MetaMask'), ('walletconnect', 'WalletConnect'), ('coinbase', 'Coinbase Wallet'), ('trust_wallet', 'Trust Wallet'), ('hardware', 'Hardware Wallet'), ('exchange', 'Exchange Wallet')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('balance', models.DecimalField(decimal_places=18, default=0, max_digits=30)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('public_key', models.CharField(blank=True, max_length=255)),
                ('encrypted_private_key', models.TextField(blank=True)),
                ('mnemonic_phrase', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_wallets', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Crypto Wallet',
                'verbose_name_plural': 'Crypto Wallets',
                'db_table': 'crypto_wallets',
                'unique_together': {('tenant', 'address', 'network')},
            },
        ),
        migrations.CreateModel(
            name='CryptoTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tx_hash', models.CharField(max_length=255, unique=True)),
                ('from_address', models.CharField(max_length=255)),
                ('to_address', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=30)),
                ('token_symbol', models.CharField(max_length=10)),
                ('token_address', models.CharField(blank=True, max_length=255)),
                ('token_name', models.CharField(blank=True, max_length=100)),
                ('gas_fee', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True)),
                ('gas_price', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True)),
                ('gas_limit', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=255)),
                ('transaction_type', models.CharField(choices=[('transfer', 'Transfer'), ('swap', 'Swap'), ('stake', 'Stake'), ('unstake', 'Unstake'), ('mint', 'Mint'), ('burn', 'Burn'), ('contract_interaction', 'Contract Interaction')], default='transfer', max_length=50)),
                ('contract_address', models.CharField(blank=True, max_length=255)),
                ('function_name', models.CharField(blank=True, max_length=100)),
                ('function_args', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='web3_integration.cryptowallet')),
            ],
            options={
                'verbose_name': 'Crypto Transaction',
                'verbose_name_plural': 'Crypto Transactions',
                'db_table': 'crypto_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeFiProtocol',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('protocol_type', models.CharField(choices=[('lending', 'Lending'), ('dex', 'Decentralized Exchange'), ('yield_farming', 'Yield Farming'), ('staking', 'Staking'), ('insurance', 'Insurance'), ('derivatives', 'Derivatives')], max_length=50)),
                ('network', models.CharField(choices=[('ethereum', 'Ethereum'), ('polygon', 'Polygon'), ('bsc', 'Binance Smart Chain'), ('solana', 'Solana')], max_length=50)),
                ('contract_address', models.CharField(max_length=255)),
                ('api_endpoint', models.URLField(blank=True)),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defi_protocols', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'DeFi Protocol',
                'verbose_name_plural': 'DeFi Protocols',
                'db_table': 'defi_protocols',
            },
        ),
        migrations.CreateModel(
            name='DeFiPosition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_type', models.CharField(choices=[('liquidity_provider', 'Liquidity Provider'), ('borrower', 'Borrower'), ('lender', 'Lender'), ('staker', 'Staker'), ('farmer', 'Yield Farmer')], max_length=50)),
                ('token_address', models.CharField(max_length=255)),
                ('token_symbol', models.CharField(max_length=10)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=30)),
                ('apy', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('rewards_earned', models.DecimalField(decimal_places=18, default=0, max_digits=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defi_positions', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defi_positions', to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defi_positions', to='web3_integration.cryptowallet')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='web3_integration.defiprotocol')),
            ],
            options={
                'verbose_name': 'DeFi Position',
                'verbose_name_plural': 'DeFi Positions',
                'db_table': 'defi_positions',
            },
        ),
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('network', models.CharField(choices=[('ethereum', 'Ethereum'), ('polygon', 'Polygon'), ('bsc', 'Binance Smart Chain'), ('solana', 'Solana')], max_length=50)),
                ('contract_type', models.CharField(choices=[('token', 'Token Contract'), ('nft', 'NFT Contract'), ('defi', 'DeFi Protocol'), ('dao', 'DAO Contract'), ('custom', 'Custom Contract')], max_length=50)),
                ('abi', models.JSONField(blank=True, null=True)),
                ('bytecode', models.TextField(blank=True)),
                ('source_code', models.TextField(blank=True)),
                ('compiler_version', models.CharField(blank=True, max_length=50)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('deployment_tx', models.CharField(blank=True, max_length=255)),
                ('deployment_block', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smart_contracts', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Smart Contract',
                'verbose_name_plural': 'Smart Contracts',
                'db_table': 'smart_contracts',
                'unique_together': {('address', 'network')},
            },
        ),
        migrations.CreateModel(
            name='Web3IntegrationSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('network', models.CharField(choices=[('ethereum', 'Ethereum'), ('polygon', 'Polygon'), ('bsc', 'Binance Smart Chain'), ('solana', 'Solana')], max_length=50)),
                ('rpc_url', models.URLField()),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='web3_settings', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Web3 Integration Setting',
                'verbose_name_plural': 'Web3 Integration Settings',
                'db_table': 'web3_integration_settings',
                'unique_together': {('tenant', 'network')},
            },
        ),
    ]
